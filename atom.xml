<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>码奴假娃</title>
  
  <subtitle>裸皮狗</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.lopy.win/"/>
  <updated>2018-10-30T09:38:05.000Z</updated>
  <id>https://blog.lopy.win/</id>
  
  <author>
    <name>Tony Java Z</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>win7 install vagrant</title>
    <link href="https://blog.lopy.win/2018/10/29/2018-2018-10-29-win7-install-vagrant/"/>
    <id>https://blog.lopy.win/2018/10/29/2018-2018-10-29-win7-install-vagrant/</id>
    <published>2018-10-29T10:15:21.000Z</published>
    <updated>2018-10-30T09:38:05.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr><p>abstract of win7 install vagrant</p><hr><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>回头补，主要是遇到的错误要先记下来</p><h1 id="已知错误"><a href="#已知错误" class="headerlink" title="已知错误"></a>已知错误</h1><h2 id="powershell-版本太低"><a href="#powershell-版本太低" class="headerlink" title="powershell 版本太低"></a>powershell 版本太低</h2><ul><li><p>错误信息：</p><pre><code>The version of powershell currently installed on this host is less thanthe required minimum version. Please upgrade the installed version ofpowershell to the minimum required version and run the command again.</code></pre></li></ul><pre><code>Installed version: 2Minimum required version: 3</code></pre><ul><li><p>解决方法</p><pre><code># 参见微软官网https://social.technet.microsoft.com/wiki/contents/articles/21016.how-to-install-windows-powershell-4-0.aspx</code></pre><p>  但是，由于win7估计快被微软放弃了，不能装了。于是stackoverflow了一下。</p><pre><code>https://stackoverflow.com/questions/19902239/how-to-upgrade-powershell-version-from-2-0-to-3-0</code></pre><ol><li><p><a href="https://chocolatey.org/install" target="_blank" rel="noopener">Install Chocolatey</a></p><pre><code>## 打开cmd,在 cmd中写入以下命令@&quot;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe&quot; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command &quot;iex ((New-Object System.Net.WebClient).DownloadString(&apos;https://chocolatey.org/install.ps1&apos;))&quot; &amp;&amp; SET &quot;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&quot;</code></pre></li><li><p>Run the following commands in CMD</p><pre><code>choco install powershellchoco upgrade powershell</code></pre></li><li><p>restart your computer</p></li></ol></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;hr&gt;
&lt;p&gt;abstract of win7 install vagrant&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerl
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ionic3 gps</title>
    <link href="https://blog.lopy.win/2018/08/01/2018-2018-08-01-ionic3-gps/"/>
    <id>https://blog.lopy.win/2018/08/01/2018-2018-08-01-ionic3-gps/</id>
    <published>2018-08-01T06:37:21.000Z</published>
    <updated>2018-10-30T09:38:05.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr><p>做一个ionic3版的GPS定位，我主要是参考ionic官网的简单例子来做的，不足请指教。</p><hr><p>1：运行命令：来安装GPS插件</p><pre><code>ionic cordova plugin add cordova-plugin-geolocationnpm install --save @ionic-native/geolocation</code></pre><p>2: 晕，好久生成的，都忘了，后面补起</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;hr&gt;
&lt;p&gt;做一个ionic3版的GPS定位，我主要是参考ionic官网的简单例子来做的，不足请指教。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;1：运行命令：来安装GPS插件&lt;/p&gt;
&lt;pre
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>整理win7下载地址</title>
    <link href="https://blog.lopy.win/2018/07/02/2018-2018-07-02-windows7-iso-ed2k/"/>
    <id>https://blog.lopy.win/2018/07/02/2018-2018-07-02-windows7-iso-ed2k/</id>
    <published>2018-07-02T14:32:37.000Z</published>
    <updated>2018-10-30T09:38:05.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr><p>整理几个win7的系统下载地址，都是vol版，方便以后安装</p><hr><h2 id="512企业版X86"><a href="#512企业版X86" class="headerlink" title="512企业版X86"></a>512企业版X86</h2><p><a href="ed2k://|file|cn_windows_7_enterprise_with_sp1_x86_dvd_u_677716.iso|2502856704|B3C25EA4DD88D7E54F22D3C3E78C410B|/" target="_blank" rel="noopener">cn_windows_7_enterprise_with_sp1_x86_dvd_u_677716.iso (2.33 GB)</a></p><h2 id="512企业版X64"><a href="#512企业版X64" class="headerlink" title="512企业版X64"></a>512企业版X64</h2><p><a href="ed2k://|file|cn_windows_7_enterprise_with_sp1_x64_dvd_u_677685.iso|3265574912|E9DB2607EA3B3540F3FE2E388F8C53C4|/" target="_blank" rel="noopener">cn_windows_7_enterprise_with_sp1_x64_dvd_u_677685.iso (3.04 GB)</a></p><h2 id="512专业版X86"><a href="#512专业版X86" class="headerlink" title="512专业版X86"></a>512专业版X86</h2><p><a href="ed2k://|file|cn_windows_7_professional_with_sp1_vl_build_x86_dvd_u_677939.iso|2502909952|935E5B4B754527BE3C238FA6ABDD9B86|/" target="_blank" rel="noopener">cn_windows_7_professional_with_sp1_vl_build_x86_dvd_u_677939.iso (2.33 GB)</a></p><h2 id="512专业版X64"><a href="#512专业版X64" class="headerlink" title="512专业版X64"></a>512专业版X64</h2><p><a href="ed2k://|file|cn_windows_7_professional_with_sp1_vl_build_x64_dvd_u_677816.iso|3266004992|5A52F4CCEFA71797D58389B397038B2F|/" target="_blank" rel="noopener">cn_windows_7_professional_with_sp1_vl_build_x64_dvd_u_677816.iso (3.04 GB)</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;hr&gt;
&lt;p&gt;整理几个win7的系统下载地址，都是vol版，方便以后安装&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;512企业版X86&quot;&gt;&lt;a href=&quot;#512企业版X86&quot; cla
      
    
    </summary>
    
      <category term="reprint" scheme="https://blog.lopy.win/categories/reprint/"/>
    
    
  </entry>
  
  <entry>
    <title>jekyll panxw blog</title>
    <link href="https://blog.lopy.win/2018/06/28/2018-2018-06-28-jekyll-panxw-blog/"/>
    <id>https://blog.lopy.win/2018/06/28/2018-2018-06-28-jekyll-panxw-blog/</id>
    <published>2018-06-28T10:07:32.000Z</published>
    <updated>2018-10-30T09:38:05.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr><p>从前blog移植过来，暂无摘要，后期再补<br><a id="more"></a>  </p><h2 id="准备把blog-改成这个-panxw-的模板，现在写一下改的过程"><a href="#准备把blog-改成这个-panxw-的模板，现在写一下改的过程" class="headerlink" title="准备把blog 改成这个 panxw 的模板，现在写一下改的过程 "></a>准备把blog 改成这个 panxw 的模板，现在写一下改的过程 </h2><h2 id="官方blog"><a href="#官方blog" class="headerlink" title="官方blog"></a>官方blog</h2><p><a href="https://www.panxw.com/" target="_blank" rel="noopener">https://www.panxw.com/</a></p><h2 id="源码地址"><a href="#源码地址" class="headerlink" title="源码地址"></a>源码地址</h2><p><a href="https://github.com/panxw/panxw.github.com" target="_blank" rel="noopener">https://github.com/panxw/panxw.github.com</a></p><h1 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h1><p>参见官网</p><h1 id="改动"><a href="#改动" class="headerlink" title="改动"></a>改动</h1><p>下面说一下我使用中的改动</p><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><h3 id="修改-config-yml"><a href="#修改-config-yml" class="headerlink" title="修改 _config.yml"></a>修改 _config.yml</h3><pre><code>#permalink节点 #我的习惯年月 日就算了，毕竟一天不可能一天几篇permalink: /:categories/:year/:month/:title# 然后这几个 人个配置信息github: uljjmhn520author: &quot;lopy&quot;email: xxxx#163.comname: &quot;lopy&apos;s Blog&quot;baseurl: /url: http://blog.lopy.windomain: blog.lopy.win# 分类，暂时不管，以后按自己的情况修改all_categories: [  [&quot;android&quot;, &quot;Android开发&quot;,&quot;/android/index.html&quot;],   [&quot;react&quot;, &quot;React Native&quot;, &quot;/react/index.html&quot;],  [&quot;web&quot;, &quot;Web建站&quot;,&quot;/web/index.html&quot;],   [&quot;linux&quot;, &quot;Linux相关&quot;,&quot;/linux/index.html&quot;],  [&quot;git&quot;, &quot;git用法&quot;,&quot;/git/index.html&quot;],  [&quot;program&quot;, &quot;软件开发&quot;,&quot;/program/index.html&quot;],  [&quot;vps&quot;, &quot;VPS&quot;,&quot;/vps/index.html&quot;],  [&quot;other&quot;, &quot;杂记&quot;,&quot;/other/index.html&quot;],  [&quot;read&quot;, &quot;书摘&quot;,&quot;/read/index.html&quot;],   [&quot;about&quot;, &quot;关于&quot;,&quot;/about.html&quot;]]# 加入节点 friendly_links ，将友链写入配置文件friendly_links: [  [&quot;GitHub&quot;,&quot;https://github.com&quot;],  [&quot;baidu&quot;,&quot;https://www.baidu.com&quot;],]</code></pre><h2 id="修改部分源码"><a href="#修改部分源码" class="headerlink" title="修改部分源码"></a>修改部分源码</h2><h3 id="加入-Rakefile"><a href="#加入-Rakefile" class="headerlink" title="加入 Rakefile"></a>加入 Rakefile</h3><p>这个提取自 jekyll-bootstrap 然后稍微改了几句和post 相关的，其他的没有改完。</p><h3 id="改-index-html"><a href="#改-index-html" class="headerlink" title="改 index.html"></a>改 index.html</h3><pre><code>&lt;span class=&quot;glyphicon glyphicon-time&quot;&gt;&lt;/span&gt;    { { post.date | date:&quot;%F %T&quot; }}&lt;/div&gt;</code></pre><h3 id="改-layouts-post-html"><a href="#改-layouts-post-html" class="headerlink" title="改 _layouts/post.html"></a>改 _layouts/post.html</h3><pre><code>日期：{ { page.date | date:&quot;%F %T&quot; }}&amp;nbsp;&amp;nbsp;&amp;nbsp;</code></pre><h3 id="修改友链页面"><a href="#修改友链页面" class="headerlink" title="修改友链页面"></a>修改友链页面</h3><pre><code>## 改成从配置文件中获取  friendlinks.html&lt;ul class=&quot;list-unstyled&quot;&gt;    { % for link in site.friendly_links %}    &lt;li&gt;        &lt;a href=&quot;{ {link[1]}}&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;            { {link[0]}}        &lt;/a&gt;    &lt;/li&gt;    { % endfor %}&lt;/ul&gt;</code></pre><h3 id="新增友链按钮"><a href="#新增友链按钮" class="headerlink" title="新增友链按钮"></a>新增友链按钮</h3><pre><code>&lt;div class=&quot;linkme&quot;&gt;    &lt;a href=&quot;http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&amp;email=w7SqraWqsa6DsrLtoKyu&quot; target=&quot;_blank&quot;&gt;        &lt;span class=&quot;linkme_span&quot;&gt;交换链接 暂不改1&lt;/span&gt;    &lt;/a&gt;&lt;/div&gt;</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;从前blog移植过来，暂无摘要，后期再补&lt;br&gt;
    
    </summary>
    
      <category term="other" scheme="https://blog.lopy.win/categories/other/"/>
    
    
  </entry>
  
  <entry>
    <title>winserver 2003 r2 sp2 vol 企业版</title>
    <link href="https://blog.lopy.win/2018/05/30/2018-2018-05-30-winserver-2003-r2-sp2-vol-enterprise/"/>
    <id>https://blog.lopy.win/2018/05/30/2018-2018-05-30-winserver-2003-r2-sp2-vol-enterprise/</id>
    <published>2018-05-29T16:00:01.000Z</published>
    <updated>2018-10-30T09:38:05.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr><p>有的时候会用winserver2003 做服务器，还是记下一个吧</p><hr><p>Windows 2003 R2 SP2 VOL 企业版（简体中文）</p><h2 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h2><h3 id="32位版"><a href="#32位版" class="headerlink" title="32位版"></a>32位版</h3><p>CD1:<br>SHA1值:d0dd2782e9387328ebfa45d8804b6850acabf520</p><pre><code>ed2k://|file|cn_win_srv_2003_r2_enterprise_with_sp2_vl_cd1_X13-46432.iso|637917184|284dc0e76945125035b9208b9199e465|h=EH6ISTIVFR5627ONBBNBKELX4VYGJPAW|/</code></pre><p>CD2:<br>SHA1值:4b364e848fcc59762dddced1493248e2896ee033</p><pre><code>ed2k://|file|cn_win_srv_2003_r2_enterprise_with_sp2_vl_cd2.iso|129703936|512c89a5839ffc8a3f3124acb9e9cb75|h=TJQXAYJUDXXM7E5X64KQBL56OUKTLU5E|</code></pre><p>序列号：MDGJK-PF6YQ-PD8DJ-RFQVM-7WKWG</p><h3 id="64位版："><a href="#64位版：" class="headerlink" title="64位版："></a>64位版：</h3><p>CD1:<br>HASH:FDA1A0401CA610F6E3A7780D6DB004DA2F944138</p><pre><code>ed2k://|file|cn_win_srv_2003_r2_enterprise_x64_with_sp2_vl_cd1_X13-47314.iso|647686144|107F10D2A7FF12FFF0602FF60602BB37|/</code></pre><p>CD2:<br>HASH:42CB2508F37B7B3331B8EB7A04D58DB508248821</p><pre><code>ed2k://|file|cn_win_srv_2003_r2_enterprise_x64_with_sp2_vl_cd2_X13-35321.iso|179204096|651EDB26E33E1AD0F14430245D4D44C6|/</code></pre><h2 id="序列号"><a href="#序列号" class="headerlink" title="序列号"></a>序列号</h2><pre><code>RYCR6-T7Y6M-2TVHK-C2YW3-7TYQ8</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;hr&gt;
&lt;p&gt;有的时候会用winserver2003 做服务器，还是记下一个吧&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Windows 2003 R2 SP2 VOL 企业版（简体中文）&lt;/p&gt;
      
    
    </summary>
    
      <category term="tools" scheme="https://blog.lopy.win/categories/tools/"/>
    
    
      <category term="windows" scheme="https://blog.lopy.win/tags/windows/"/>
    
      <category term="server" scheme="https://blog.lopy.win/tags/server/"/>
    
  </entry>
  
  <entry>
    <title>debian9 安装 lnmp</title>
    <link href="https://blog.lopy.win/2018/05/17/2018-2018-05-17-debian9-lnmp/"/>
    <id>https://blog.lopy.win/2018/05/17/2018-2018-05-17-debian9-lnmp/</id>
    <published>2018-05-16T16:00:02.000Z</published>
    <updated>2018-10-30T09:38:05.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr><p>从前blog移植过来，暂无摘要，后期再补</p><hr><pre><code>apt-get updateapt-get install nginx mysql-server php7.0-fpm php7.0-curl php7.0-gd php7.0-intl php-pear php7.0-imagick php7.0-imap php7.0-mcrypt php7.0-common php7.0-mysql php7.0-pspell php7.0-recode php7.0-sqlite php7.0-tidy php7.0-xmlrpc php7.0-xsl php7.0-memcached memcached</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;hr&gt;
&lt;p&gt;从前blog移植过来，暂无摘要，后期再补&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;apt-get update

apt-get install nginx mys
      
    
    </summary>
    
      <category term="web" scheme="https://blog.lopy.win/categories/web/"/>
    
    
      <category term="debian" scheme="https://blog.lopy.win/tags/debian/"/>
    
      <category term="php" scheme="https://blog.lopy.win/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>vbox中debian9安装增强功能和文件共享</title>
    <link href="https://blog.lopy.win/2018/05/17/2018-2018-05-17-debian9-install-vboxadditions/"/>
    <id>https://blog.lopy.win/2018/05/17/2018-2018-05-17-debian9-install-vboxadditions/</id>
    <published>2018-05-16T16:00:01.000Z</published>
    <updated>2018-10-30T09:38:05.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr><p>从前blog移植过来，暂无摘要，后期再补</p><hr><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="先安装以下"><a href="#先安装以下" class="headerlink" title="先安装以下"></a>先安装以下</h2><pre><code>apt updateapt upgradeapt install build-essential module-assistant dkmsreboot</code></pre><h2 id="然后安装-VBoxAdditions"><a href="#然后安装-VBoxAdditions" class="headerlink" title="然后安装 VBoxAdditions"></a>然后安装 VBoxAdditions</h2><ul><li><p>在vbox 进入debian系统</p></li><li><p>然后 Devices &gt; Insert Guest Additions CD image.<br><img src="/assets/images/2018-05-17/debian-9-virtualbox-guest1.png" alt="图"></p></li><li><p>然后，在系统中挂载VBoxAdditions光盘镜像</p></li></ul><pre><code>mount /media/cdrom </code></pre><ul><li>安装插件</li></ul><pre><code>sh /media/cdrom/VBoxLinuxAdditions.runreboot</code></pre><h2 id="设置共享文件夹"><a href="#设置共享文件夹" class="headerlink" title="设置共享文件夹"></a>设置共享文件夹</h2><ul><li>设置》共享文件夹》 新建</li><li>选择路径，</li><li>设置名称，比如 vbox_sharing </li><li>勾选 自动挂载和固定分配，点确定</li></ul><p>后面补图</p><h2 id="设置开机自动挂载到到指定点"><a href="#设置开机自动挂载到到指定点" class="headerlink" title="设置开机自动挂载到到指定点"></a>设置开机自动挂载到到指定点</h2><p>前面设置好共享文件夹后，系统启动时，会挂载到 /media/sf_&lt;挂载名称&gt;，如 /media/sf_vbox_sharing</p><p>现在，我们要设置自动挂载到指定点，就是修改 /etc/fstab </p><p>挂载命令的格式为，挂载之前 path 应该存在， &lt; &gt; 中间的值可变</p><p>&lt;sharing name&gt; &lt;path&gt; vboxsf &lt;options&gt; 0 0<br>如</p><pre><code>mkdir /var/vbox_sharingvbox_sharing /var/vbox_sharing vboxsf comment=systemd.automount 0 0</code></pre><p>然后保存，重启，不出意外就成功了</p><p>其中，option 中可有很多参数</p><p>到时给个链接，现在没时间去找</p><p>其中 comment=systemd.automount 参数没有，貌似就不会成功</p><p>还有其它的，比如指定用户组</p><p>gid=1000,uid=1000</p><p>如:</p><pre><code>vbox_sharing /var/vbox_sharing vboxsf gid=1000,uid=1000,comment=systemd.automount 0 0</code></pre><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><p><a href="https://www.linuxbabe.com/debian/install-virtualbox-guest-additions-debian-9-stretch" target="_blank" rel="noopener">https://www.linuxbabe.com/debian/install-virtualbox-guest-additions-debian-9-stretch</a></p><p><a href="https://askubuntu.com/questions/365346/virtualbox-shared-folder-mount-from-fstab-fails-works-once-bootup-is-complete" target="_blank" rel="noopener">https://askubuntu.com/questions/365346/virtualbox-shared-folder-mount-from-fstab-fails-works-once-bootup-is-complete</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;hr&gt;
&lt;p&gt;从前blog移植过来，暂无摘要，后期再补&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;
      
    
    </summary>
    
      <category term="linux" scheme="https://blog.lopy.win/categories/linux/"/>
    
    
      <category term="debian" scheme="https://blog.lopy.win/tags/debian/"/>
    
      <category term="virtualbox" scheme="https://blog.lopy.win/tags/virtualbox/"/>
    
  </entry>
  
  <entry>
    <title>ionic hot update</title>
    <link href="https://blog.lopy.win/2017/12/01/2017-2017-12-01-ionic-hot-update/"/>
    <id>https://blog.lopy.win/2017/12/01/2017-2017-12-01-ionic-hot-update/</id>
    <published>2017-11-30T16:00:01.000Z</published>
    <updated>2018-10-30T09:38:05.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr><p>从前blog移植过来，暂无摘要，后期再补</p><hr><h2 id="ionic3-热更新学习"><a href="#ionic3-热更新学习" class="headerlink" title="ionic3 热更新学习"></a>ionic3 热更新学习</h2><h3 id="1-安装基本框架"><a href="#1-安装基本框架" class="headerlink" title="1.安装基本框架"></a>1.安装基本框架</h3><pre><code>npm install -g ionic@latestnpm install -g cordova ionic</code></pre><h3 id="2-新建ionic项目"><a href="#2-新建ionic项目" class="headerlink" title="2.新建ionic项目"></a>2.新建ionic项目</h3><pre><code>ionic start myapp</code></pre><h3 id="3-进入项目文件夹"><a href="#3-进入项目文件夹" class="headerlink" title="3.进入项目文件夹"></a>3.进入项目文件夹</h3><pre><code># 执行下面命令可以预览项目cd myapp# 正常显示后可以关掉服务Ctrl+C，此步骤只是保证ionic新建项目成功ionic serve</code></pre><h3 id="4-ios目前已不支持热更新，所以只对Android平台进行设置"><a href="#4-ios目前已不支持热更新，所以只对Android平台进行设置" class="headerlink" title="4.ios目前已不支持热更新，所以只对Android平台进行设置"></a>4.ios目前已不支持热更新，所以只对Android平台进行设置</h3><pre><code># 设置Android平台ionic cordova platform add android# 设置安卓版本需修改下面两个文件内容的target的值，默认设好了platforms/android/project.properties platforms/android/CordovaLib/project.properties # 安装热更新插件cordova plugin add cordova-hot-code-push-plugincordova plugin add cordova-hot-code-push-local-dev-addonnpm install -g cordova-hot-code-push-cli</code></pre><h3 id="5-在config-xml配置文件中加入下面节点"><a href="#5-在config-xml配置文件中加入下面节点" class="headerlink" title="5.在config.xml配置文件中加入下面节点"></a>5.在config.xml配置文件中加入下面节点</h3><pre><code>&lt;chcp&gt;     &lt;config-file url=&quot;http://192.168.1.203:8121/chcp.json&quot; /&gt;     &lt;native-interface version=&quot;1&quot; /&gt;&lt;/chcp&gt;# 第一个子节点是需要发布在iis上的文件地址# 第二个子节点是当前版本号# 还有其它配置此处不再罗列</code></pre><h3 id="6-新开一个终端执行下面命令"><a href="#6-新开一个终端执行下面命令" class="headerlink" title="6.新开一个终端执行下面命令"></a>6.新开一个终端执行下面命令</h3><pre><code>cordova-hcp server如果能够正常输出类似Running serverChecking:  /ionic/myapp/www/local_url http://localhost:31284Warning: .chcpignore does not exist.Build 2017.10.27-10.17.48 created in ionic/myapp/wwwcordova-hcp local server available at: http://localhost:31284cordova-hcp public server available at: https://5027caf9.ngrok.com检查/项目名称/www 路径下 有chcp.json和chcp.manifest表示热更新服务启动正常</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;hr&gt;
&lt;p&gt;从前blog移植过来，暂无摘要，后期再补&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;ionic3-热更新学习&quot;&gt;&lt;a href=&quot;#ionic3-热更新学习&quot; class=
      
    
    </summary>
    
      <category term="web" scheme="https://blog.lopy.win/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>window7 修改docker安装的machine 位置</title>
    <link href="https://blog.lopy.win/2017/05/26/2017-2017-05-26-docker-for-win-alter-vdi-path/"/>
    <id>https://blog.lopy.win/2017/05/26/2017-2017-05-26-docker-for-win-alter-vdi-path/</id>
    <published>2017-05-25T16:00:01.000Z</published>
    <updated>2018-10-30T09:38:05.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr><p>从前blog移植过来，暂无摘要，后期再补</p><hr><p>win7下安装Docker ，默认的machine location 是在C:\users\xx.docker\machine\machines 下面，为了不占用系统盘，想修改盘符位置</p><p>google了一下，发现只需要设置MACHINE_STORAGE_PATH环境变量就可以，变量值为你想要设置的路径保存，重新运行docker quickstart</p><p>流程如下</p><ol><li><p>设置MACHINE_STORAGE_PATH环境变量</p></li><li><p>运行Docker Quickstart Termina</p></li></ol><p>如果想转移现有的可以试试下面的方法</p><ol><li><p>关闭停止Docker的虚拟机。</p></li><li><p>打开VirtualBox，选择“管理”菜单下的“虚拟介质管理”，</p></li><li><p>选中docker创建的“disk”，然后点击菜单中的“复制”命令，根据向导，把当前的disk复制到另一个盘上面去。</p></li><li><p>回到VirtualBox主界面，右键“default”这个虚拟机，选择“设置”命令，在弹出的窗口中选择“存储”选项。</p></li><li><p>把disk从“控制器SATA”中删除，然后重新添加我们刚才复制到另外一个磁盘上的那个文件。</p></li></ol><p>引用<br><a href="http://blog.csdn.net/u011248395/article/details/70994088" target="_blank" rel="noopener">http://blog.csdn.net/u011248395/article/details/70994088</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;hr&gt;
&lt;p&gt;从前blog移植过来，暂无摘要，后期再补&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;win7下安装Docker ，默认的machine location 是在C:\users\xx.
      
    
    </summary>
    
      <category term="linux" scheme="https://blog.lopy.win/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>swoole 做 httpserver 整合phalcon </title>
    <link href="https://blog.lopy.win/2017/03/22/2017-2017-03-22-swoole-httpserver-attention/"/>
    <id>https://blog.lopy.win/2017/03/22/2017-2017-03-22-swoole-httpserver-attention/</id>
    <published>2017-03-21T16:00:02.000Z</published>
    <updated>2018-10-30T09:38:05.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr><p>从前blog移植过来，暂无摘要，后期再补</p><hr><h3 id="在整合的时候遇到的一些问题，先列出来，害怕忘了"><a href="#在整合的时候遇到的一些问题，先列出来，害怕忘了" class="headerlink" title="在整合的时候遇到的一些问题，先列出来，害怕忘了"></a>在整合的时候遇到的一些问题，先列出来，害怕忘了</h3><h4 id="mysql连接断开问题，可能redis等也存在"><a href="#mysql连接断开问题，可能redis等也存在" class="headerlink" title="mysql连接断开问题，可能redis等也存在"></a>mysql连接断开问题，可能redis等也存在</h4><ul><li><p>原因找到了</p><ol><li><p>mysql 客户端运行时，如果长时间没有操作会自动断开</p></li><li><p>swoole 开启的服务程序长时间运行，常驻内存</p></li><li><p>phalcon 里的model 的 find findFirst 方法里面，不能选择di，而只能使用默认 di</p><p> 以下是model的一段源代码</p><pre><code>......public static function findFirst(var parameters = null) -&gt; &lt;Model&gt;{    var params, builder, query, bindParams, bindTypes, cache,            dependencyInjector, manager;    let dependencyInjector = Di::getDefault();    let manager = &lt;ManagerInterface&gt; dependencyInjector-&gt;getShared(&quot;modelsManager&quot;);    if typeof parameters != &quot;array&quot; {        let params = [];        if parameters !== null {                let params[] = parameters;        }    } else {        let params = parameters;    }......</code></pre></li><li><p>毋庸置疑，Di::getDefault() 中的 default 肯定是一个静态属性</p><p> 以下是 di 的一段源代码</p><pre><code> ...... /** * Latest DI build */protected static _default;....../** * Return the latest DI created */public static function getDefault() -&gt; &lt;DiInterface&gt;{        return self::_default;}......</code></pre><p> 也就是说在cli中（也就是server端）调用后，_default 这个属性就会一直在内存中，mysql的客户端（比如pdo）<br> 由于注入到di中（di-&gt;set(‘db’,{PdoAdapter})），并且phalcon在取db时，用的<br> 是di-&gt;getShared(‘db’,{db})，以下是 phalcn/model/manager 中的一段代码</p><pre><code>....../** * Returns the connection to read or write data related to a model depending on the connection services. */protected function _getConnection(&lt;ModelInterface&gt; model, connectionServices) -&gt; &lt;AdapterInterface&gt;{           var dependencyInjector, service, connection;    let service = this-&gt;_getConnectionService(model, connectionServices);    let dependencyInjector = &lt;DiInterface&gt; this-&gt;_dependencyInjector;    if typeof dependencyInjector != &quot;object&quot; {        throw new Exception(&quot;A dependency injector container is required to obtain the services related to the ORM&quot;);    }    /**     * Request the connection service from the DI     */     let connection = &lt;AdapterInterface&gt; dependencyInjector-&gt;getShared(service);    if typeof connection != &quot;object&quot; {        throw new Exception(&quot;Invalid injected connection service&quot;);    }    return connection;}......</code></pre></li><li><p>综上所述，如果app长时间没有对数据库的操作，他们之间的连接就会断开，<br>并且不会自动重连，还有一种情况，就是如果mysql服务重启了，连接也不会重连<br>而常规的apache/nginx方式就不会出现这个问题，毕竟每次请求都会新建一个客户端</p></li><li><p>现在问题找到了，该说解决方法了，方法很多，只是难易问题</p><ol><li><p>在每次与mysql 交互时用，如果返回失败，检查错误代码，如果为 2006 / 2013，<br>表示连接失败，再执行一次连接操作。</p><p> 这种方法的思路就是很简单，就是没连上就重连</p><p> 这明显不可能在业务层实现，但phalcon的源码不是php的，所以dao层也不太方便修改</p></li><li><p>不用findFirst 这类静态方法，而用builder 来操作数据。</p><p> 这样虽能解决问题，但原本一句话能解决的问题需要写多句才能实现。我目前临时用的这种<br> 方式，在model 中封装了两个方法来暂代。</p></li><li><p>其实和2差不多，只是在 modelManager 和 di 上做文章</p><p> 也就是说，操作数据库时，不用默认的di（即常驻内存的di），而选用每次<br> 请求生成的di</p><pre><code>public function findOne($parameters = null){    /** @var DiInterface $di */    $di = $this-&gt;_dependencyInjector;    if(!$di || !($di instanceof DiInterface)){        throw new Model\Exception(&apos;di must be set in model&apos;);    }    /** @var Model\Manager $manager */    $manager = $di-&gt;getShared(&quot;modelsManager&quot;);    if(!is_array($parameters)){        $params = [];        if ($parameters !== null) {            $params[] = $parameters;        }    }else{        $params = $parameters;    }    /**     * Builds a query with the passed parameters     */    $builder = $manager-&gt;createBuilder($params);    $builder-&gt;from(get_called_class());    /**     * We only want the first record     */    $builder-&gt;limit(1);    /** @var Model\Query $query */    $query = $builder-&gt;getQuery();    /**     * Check for bind parameters     */    $bindParams = isset($bindParams[&apos;bind&apos;]) ? $bindParams[&apos;bind&apos;] : null;    if($bindParams){        if (is_array($bindParams)) {            $query-&gt;setBindParams($bindParams, true);        }        if(isset($params[&quot;bindTypes&quot;]) ){            if(is_array($params[&quot;bindTypes&quot;])){                $query-&gt;setBindTypes($params[&quot;bindTypes&quot;], true);            }        }    }</code></pre></li></ol></li></ol></li></ul><pre><code>            /**             * Pass the cache options to the query             */            if(isset($params[&apos;cache&apos;])){                $query-&gt;cache($params[&apos;cache&apos;]);            }            /**             * Return only the first row             */            $query-&gt;setUniqueRow(true);            /**             * Execute the query passing the bind-params and casting-types             */            return $query-&gt;execute();        }        public function findAll($parameters = null)        {            /** @var DiInterface $di */            $di = $this-&gt;_dependencyInjector;            if(!$di || !($di instanceof DiInterface)){                throw new Model\Exception(&apos;di must be set in model&apos;);            }            /** @var Model\Manager $manager */            $manager = $di-&gt;getShared(&quot;modelsManager&quot;);            if (!is_array($parameters)) {                $params = [];                if ($parameters !== null) {                    $params[] = $parameters;                }            }else{                $params = $parameters;            }            /**             * Builds a query with the passed parameters             */            $builder = $manager-&gt;createBuilder($params);            $builder-&gt;from(get_called_class());            /** @var Model\Query $query */            $query = $builder-&gt;getQuery();            /**             * Check for bind parameters             */            if (isset($params[&apos;bind&apos;])) {                if (is_array($params[&apos;bind&apos;])) {                    $query-&gt;setBindParams($params[&apos;bind&apos;], true);                }                if (isset($params[&apos;bindTypes&apos;])) {                    if (is_array($params[&apos;bindTypes&apos;])) {                        $query-&gt;setBindTypes($params[&apos;bindTypes&apos;],true);                    }                }            }            /**             * Pass the cache options to the query             */            if (isset($params[&apos;cache&apos;])) {                $query-&gt;cache($params[&apos;cache&apos;]);            }            /**             * Execute the query passing the bind-params and casting-types             */            /** @var Model\ResultsetInterface|Model\Resultset\Complex $resultSet */            $resultSet = $query-&gt;execute();            /**             * Define an hydration mode             */            if (is_object($resultSet)) {                if (isset($params[&apos;hydration&apos;])) {                    $resultSet-&gt;setHydrateMode($params[&apos;hydration&apos;]);                }            }            return $resultSet;        }    这样做后代码的前后对比，以findFirst为例        # 没改之前        $row = Model::findFirst([...]);        # 改了之后        $row = (new Model(null,$di))-&gt;findOne([...]);        # 或者用 modelManager 来生成        $row = $this-&gt;modelManager-&gt;load(Model::class)-&gt;findOne([...]);         # 使用这种方式的前提是在注入modelManager服务时，就应该把di注入到modelManager中        # 1. 注入 modelManager        $di-&gt;setShared(&apos;modelManager&apos;,function() use($di){            $manager = new Phalcon\Mvc\Model\Manager();            $manager-&gt;setDi($di);            return $manager;        });        # 2. findOne        $row = $this-&gt;modelManager-&gt;load(Model::class)-&gt;findOne([...]);     如果要实例化一个模型，做 dml 操作，如save        # load的参数2，如果为false，表示不新实例化一个模型，而沿用一个曾经实例化过的模型，        # 目前没有没有测试为false 的情况来做dml操作，但为了不必要的麻烦，暂时不用false的情况        $row = $this-&gt;modelManager-&gt;load(Model::class，true);         $row-&gt;name = &apos;jim green&apos;;        $row-&gt;age  = &apos;13&apos;;        $row-&gt;save();        # 或者        $row = new Model([&apos;name&apos;=&gt;&apos;tom&apos;,&apos;age&apos;=&gt;&apos;13&apos;],$di);        $row-&gt;save();4. 还在思考其它方法   目前想的是，既然要把swoole 和phalcon 合起来，就避免不了两个或多个di。   所以，我想把model这部分重写了，去掉取默认di的做法。而多个应用之各自分别   设置不同di，只不过，可能脑壳容易混乱。</code></pre><h4 id="get-post-cookie-header-的-get-set-问题"><a href="#get-post-cookie-header-的-get-set-问题" class="headerlink" title="get post cookie header 的 get/set 问题"></a>get post cookie header 的 get/set 问题</h4><h4 id="session-的-get-set-问题"><a href="#session-的-get-set-问题" class="headerlink" title="session 的 get/set 问题"></a>session 的 get/set 问题</h4><h3 id="解决方法有空再写出来"><a href="#解决方法有空再写出来" class="headerlink" title="解决方法有空再写出来"></a>解决方法有空再写出来</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;hr&gt;
&lt;p&gt;从前blog移植过来，暂无摘要，后期再补&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;在整合的时候遇到的一些问题，先列出来，害怕忘了&quot;&gt;&lt;a href=&quot;#在整合的时候遇到的
      
    
    </summary>
    
      <category term="web" scheme="https://blog.lopy.win/categories/web/"/>
    
    
      <category term="php" scheme="https://blog.lopy.win/tags/php/"/>
    
      <category term="phalcon" scheme="https://blog.lopy.win/tags/phalcon/"/>
    
      <category term="swoole" scheme="https://blog.lopy.win/tags/swoole/"/>
    
  </entry>
  
  <entry>
    <title>debian 的 iptables 的常用配置</title>
    <link href="https://blog.lopy.win/2017/03/22/2017-2017-03-22-debian-iptables-configure/"/>
    <id>https://blog.lopy.win/2017/03/22/2017-2017-03-22-debian-iptables-configure/</id>
    <published>2017-03-21T16:00:01.000Z</published>
    <updated>2018-10-30T09:38:05.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr><p>从前blog移植过来，暂无摘要，后期再补</p><hr><h2 id="常用配置（转自-http-www-cnblogs-com-kgdxpr-p-4061646-html）"><a href="#常用配置（转自-http-www-cnblogs-com-kgdxpr-p-4061646-html）" class="headerlink" title="常用配置（转自 http://www.cnblogs.com/kgdxpr/p/4061646.html）"></a>常用配置（转自 <a href="">http://www.cnblogs.com/kgdxpr/p/4061646.html</a>）</h2><h3 id="第一次配置"><a href="#第一次配置" class="headerlink" title="第一次配置"></a>第一次配置</h3><pre><code>#这个一定要先做，不然清空后可能会悲剧iptables -P INPUT ACCEPT#清空默认所有规则iptables -F#清空自定义的所有规则iptables -X#计数器置0 iptables -Z</code></pre><h3 id="配置规则"><a href="#配置规则" class="headerlink" title="配置规则"></a>配置规则</h3><pre><code>#如果没有此规则，你将不能通过127.0.0.1访问本地服务，例如ping 127.0.0.1iptables -A INPUT -i lo -j ACCEPT#开启ssh端口22iptables -A INPUT -p tcp --dport 22 -j ACCEPT#开启FTP端口21iptables -A INPUT -p tcp --dport 21 -j ACCEPT#允许特定ip连接25端口：iptables -I FORWARD -s 127.0.0.1 -p tcp --dport 25 -j ACCEPT#开启web服务端口80iptables -A INPUT -p tcp --dport 80 -j ACCEPT#tomcatiptables -A INPUT -p tcp --dport 8080 -j ACCEPT#mysqliptables -A INPUT -p tcp --dport xxxx -j ACCEPT#允许icmp包通过,也就是允许pingiptables -A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT#允许所有对外请求的返回包#本机对外请求相当于OUTPUT,对于返回数据包必须接收啊，这相当于INPUT了iptables -A INPUT -m state --state ESTABLISHED -j ACCEPT#如果要添加内网ip信任（接受其所有TCP请求）iptables -A INPUT -p tcp -s 45.96.174.68 -j ACCEPT#每秒中最多允许5个新连接iptables -A FORWARD -p tcp --syn -m limit --limit 1/s --limit-burst 5 -j ACCEPT#每秒中最多允许5个新连接iptables -A FORWARD -p tcp --tcp-flags SYN,ACK,FIN,RST RST -m limit --limit 1/s -j ACCEPT#Ping洪水攻击iptables -A FORWARD -p icmp --icmp-type echo-request -m limit --limit 1/s -j ACCEPT#封单个IP的命令是：iptables -I INPUT -s 222.34.135.106 -j DROP#封IP段的命令是：iptables -I INPUT -s 211.1.0.0/16 -j DROPiptables -I INPUT -s 211.2.0.0/16 -j DROPiptables -I INPUT -s 211.3.0.0/16 -j DROP#封整个段的命令是：iptables -I INPUT -s 211.0.0.0/8 -j DROP#封几个段的命令是：iptables -I INPUT -s 61.37.80.0/24 -j DROPiptables -I INPUT -s 61.37.81.0/24 -j DROP#过滤所有非以上规则的请求iptables -P INPUT DROP</code></pre><h3 id="保存重启"><a href="#保存重启" class="headerlink" title="保存重启"></a>保存重启</h3><pre><code>#rehatservice iptables saveservice iptables restart#debianiptables-save &gt; /path/to/rulefile</code></pre><h3 id="删除规则1"><a href="#删除规则1" class="headerlink" title="删除规则1"></a>删除规则1</h3><pre><code>#eg，删除之前添加的规则 (iptables -A INPUT -p tcp -m tcp --dport 8080 -j ACCEPT)iptables -D INPUT -p tcp -m tcp --dport 8080 -j ACCEPT</code></pre><h3 id="删除规则2"><a href="#删除规则2" class="headerlink" title="删除规则2"></a>删除规则2</h3><pre><code>#列出指定的链的规则的编号iptables -L INPUT --line-numbers#删除第一条iptables -D INPUT 1</code></pre><h2 id="debian的自动加载-转自-http-blog-phiy-me-debian-iptables-persistent"><a href="#debian的自动加载-转自-http-blog-phiy-me-debian-iptables-persistent" class="headerlink" title="debian的自动加载 (转自 http://blog.phiy.me/debian-iptables-persistent/)"></a>debian的自动加载 (转自 <a href="">http://blog.phiy.me/debian-iptables-persistent/</a>)</h2><h3 id="安装-iptables-persistent"><a href="#安装-iptables-persistent" class="headerlink" title="安装 iptables-persistent"></a>安装 iptables-persistent</h3><pre><code>apt-get install iptables-persistent</code></pre><h3 id="保存至-etc-iptables-rules"><a href="#保存至-etc-iptables-rules" class="headerlink" title="保存至 /etc/iptables/rules"></a>保存至 /etc/iptables/rules</h3><pre><code>iptables-save &gt; /etc/iptables/rules</code></pre><p><a href="http://www.cnblogs.com/kgdxpr/p/4061646.html" target="_blank" rel="noopener">http://www.cnblogs.com/kgdxpr/p/4061646.html</a></p><p><a href="http://blog.phiy.me/debian-iptables-persistent/" target="_blank" rel="noopener">http://blog.phiy.me/debian-iptables-persistent/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;hr&gt;
&lt;p&gt;从前blog移植过来，暂无摘要，后期再补&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;常用配置（转自-http-www-cnblogs-com-kgdxpr-p-406164
      
    
    </summary>
    
      <category term="linux" scheme="https://blog.lopy.win/categories/linux/"/>
    
    
      <category term="config" scheme="https://blog.lopy.win/tags/config/"/>
    
      <category term="linux" scheme="https://blog.lopy.win/tags/linux/"/>
    
      <category term="iptables" scheme="https://blog.lopy.win/tags/iptables/"/>
    
  </entry>
  
  <entry>
    <title>debian 以root权限运行图形程序</title>
    <link href="https://blog.lopy.win/2017/03/17/2017-2017-03-17-debian-run-graphics-program-at-root/"/>
    <id>https://blog.lopy.win/2017/03/17/2017-2017-03-17-debian-run-graphics-program-at-root/</id>
    <published>2017-03-16T16:00:01.000Z</published>
    <updated>2018-10-30T09:38:05.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr><p>从前blog移植过来，暂无摘要，后期再补</p><hr><ul><li><h4 id="以-root-权限登录图形界面百度谷哥一大堆，就不写了，而且一般也用不着"><a href="#以-root-权限登录图形界面百度谷哥一大堆，就不写了，而且一般也用不着" class="headerlink" title="以 root 权限登录图形界面百度谷哥一大堆，就不写了，而且一般也用不着"></a>以 root 权限登录图形界面百度谷哥一大堆，就不写了，而且一般也用不着</h4></li><li><h4 id="最近遇到一个问题，运行一个图形程序，需要-root-权限。要按平常，直接-sudo-之。"><a href="#最近遇到一个问题，运行一个图形程序，需要-root-权限。要按平常，直接-sudo-之。" class="headerlink" title="最近遇到一个问题，运行一个图形程序，需要 root 权限。要按平常，直接 sudo 之。"></a>最近遇到一个问题，运行一个图形程序，需要 root 权限。要按平常，直接 sudo 之。</h4><pre><code>sudo xxx</code></pre></li><li><h4 id="拿-wireshark-来说，"><a href="#拿-wireshark-来说，" class="headerlink" title="拿 wireshark 来说，"></a>拿 wireshark 来说，</h4><pre><code>sudo wireshark</code></pre></li><li><h4 id="结果，报错了。。。"><a href="#结果，报错了。。。" class="headerlink" title="结果，报错了。。。"></a>结果，报错了。。。</h4><p>  不同的程序报错信息不同，但大致意思都是连不上 X。wireshark 报错如下</p><pre><code>No protocol specified** (wireshark:20909): WARNING **: Could not open X displayNo protocol specifiedUnable to init server: 无法连接：拒绝连接(wireshark:20909): Gtk-WARNING **: cannot open display: :0</code></pre><p>  某java 程序的报错如下</p><pre><code>No protocol specifiedException in thread &quot;main&quot; java.awt.AWTError: Can&apos;t connect to X11 window server using &apos;:0&apos; as the value of the DISPLAY variable.        at sun.awt.X11GraphicsEnvironment.initDisplay(Native Method)        at sun.awt.X11GraphicsEnvironment.access$200(X11GraphicsEnvironment.java:65)        at sun.awt.X11GraphicsEnvironment$1.run(X11GraphicsEnvironment.java:115)        at java.security.AccessController.doPrivileged(Native Method)        at sun.awt.X11GraphicsEnvironment.&lt;clinit&gt;(X11GraphicsEnvironment.java:74)        at java.lang.Class.forName0(Native Method)        at java.lang.Class.forName(Class.java:264)        at java.awt.GraphicsEnvironment.createGE(GraphicsEnvironment.java:103)        at java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment(GraphicsEnvironment.java:82)        at java.awt.Window.initGC(Window.java:475)        at java.awt.Window.init(Window.java:495)        at java.awt.Window.&lt;init&gt;(Window.java:537)        at java.awt.Frame.&lt;init&gt;(Frame.java:420)        at java.awt.Frame.&lt;init&gt;(Frame.java:385)        at javax.swing.JFrame.&lt;init&gt;(JFrame.java:189)        at net.fs.client.ClientUI.&lt;init&gt;(ClientUI.java:167)        at net.fs.client.FSClient.main(FSClient.java:26)</code></pre></li></ul><ul><li><h4 id="查了一下，图形界面有自己的-sudo"><a href="#查了一下，图形界面有自己的-sudo" class="headerlink" title="查了一下，图形界面有自己的 sudo"></a>查了一下，图形界面有自己的 sudo</h4><pre><code>#kdekdesudo COMMAND</code></pre></li></ul><pre><code>#gnomegksu COMMAND#COMMAND 里有参数时记得加上引号，将命令和参数包起来，如kdesudo &apos;godie -a --bcd=efg&apos;</code></pre><ul><li><h4 id="目前我是kde环境，试了一下，果然能用"><a href="#目前我是kde环境，试了一下，果然能用" class="headerlink" title="目前我是kde环境，试了一下，果然能用"></a>目前我是kde环境，试了一下，果然能用</h4><pre><code>kdesudo wireshark</code></pre></li><li><h3 id="ok-收工"><a href="#ok-收工" class="headerlink" title="ok 收工"></a>ok 收工</h3></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;hr&gt;
&lt;p&gt;从前blog移植过来，暂无摘要，后期再补&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;以-root-权限登录图形界面百度谷哥一大堆，就不写了，而且一般也用不
      
    
    </summary>
    
      <category term="linux" scheme="https://blog.lopy.win/categories/linux/"/>
    
    
      <category term="debian" scheme="https://blog.lopy.win/tags/debian/"/>
    
      <category term="linux" scheme="https://blog.lopy.win/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>rsa的js加密和php解密</title>
    <link href="https://blog.lopy.win/2017/03/02/2017-2017-03-02-js-php-rsa/"/>
    <id>https://blog.lopy.win/2017/03/02/2017-2017-03-02-js-php-rsa/</id>
    <published>2017-03-01T16:00:01.000Z</published>
    <updated>2018-10-30T09:38:05.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr><p>从前blog移植过来，暂无摘要，后期再补</p><hr><h3 id="零、-后面一个实例，点击跳过前面的废话"><a href="#零、-后面一个实例，点击跳过前面的废话" class="headerlink" title="零、 后面一个实例，点击跳过前面的废话"></a>零、 后面一个实例，<a href="#四完整的实例">点击跳过前面的废话</a></h3><h3 id="一、-javascript-加密"><a href="#一、-javascript-加密" class="headerlink" title="一、 javascript 加密"></a>一、 javascript 加密</h3><ul><li><p>引入相关的js库</p><p>  jsbn.js ,<br>  prng4.js ,<br>  rng4.js ,<br>  rsa.js ,<br>  base64.js</p><p>  他们的远程目录为： <a href="http://www-cs-students.stanford.edu/~tjw/jsbn/" target="_blank" rel="noopener">http://www-cs-students.stanford.edu/~tjw/jsbn/</a></p><pre><code>&lt;script src=&quot;http://www-cs-students.stanford.edu/~tjw/jsbn/jsbn.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;http://www-cs-students.stanford.edu/~tjw/jsbn/prng4.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;http://www-cs-students.stanford.edu/~tjw/jsbn/rng.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;http://www-cs-students.stanford.edu/~tjw/jsbn/rsa.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;http://www-cs-students.stanford.edu/~tjw/jsbn/base64.js&quot;&gt;&lt;/script&gt;</code></pre><p>  本 blog 也拷贝了这几个库，网址的目录为： <a href="http://blog.lopy.win/assets/rsa/，将几个文件名加在后面就可以了。">http://blog.lopy.win/assets/rsa/，将几个文件名加在后面就可以了。</a></p><p>  github地址：<a href="https://github.com/uljjmhn520/uljjmhn520.github.com/tree/master/assets/rsa" target="_blank" rel="noopener">https://github.com/uljjmhn520/uljjmhn520.github.com/tree/master/assets/rsa</a></p><pre><code>//jquery 方便dom操作&lt;script src=&quot;//cdn.bootcss.com/jquery/2.1.3/jquery.min.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;http://blog.lopy.win/assets/rsa/jsbn.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;http://blog.lopy.win/assets/rsa/prng4.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;http://blog.lopy.win/assets/rsa/rng.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;http://blog.lopy.win/assets/rsa/rsa.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;http://blog.lopy.win/assets/rsa/base64.js&quot;&gt;&lt;/script&gt;</code></pre></li></ul><ul><li><p>js 代码，第一部分</p><pre><code>//创建一个rsa类，只有一个加密方法，构造函数为公钥中的 n 和 e 也就是模和指数。var MyRsa = function(module,eVal){    module = module || &apos;&apos;;    eVal = eVal || &apos;010001&apos;;    var rsaObj = new RSAKey();    //构造函数    var init = function(module,eVal){        if(module){            rsaObj.setPublic(module,eVal);        }    };    init(key,eVal);    //加密    this.encrypt = function(str){        var strEncoded = rsaObj.encrypt(str);        if(!strEncoded){            alert(&apos;hello what\&apos;s your name&apos;);            return false;        }        return hex2b64(strEncoded);    }}</code></pre></li></ul><ul><li><p>js代码，第二部分</p><pre><code>//n和e为rsa的模和指数，他们的值是从密钥对中获得的，后文会给出php 中获取的方法var n =&quotquot;;var e = &apos;010001&apos;;var myRsa = new MyRsa(n,e);var encoded = myRsa.encrypt(&apos;hello world&apos;);console.log(encoded);// result，以下为结果之一，每次加密的结果都可能不一样// XJJeZhc4tYp50OXDAyBS6aK0lWOPNR6IVOM4auccxb+uk0+d5GewFq9ffAWhlBpAiRTuo1IbKm8e23UdU3kbIFs9nNAMCSdj/2FL3C9NrXlW67Jfs6azAMHMHKW3f3rXPCRMTvFGq09KdobwLiy71GidRZtbQYQEaZ8QhHpZC/QYem9EAdu4ULdBX5e1uigIPm3ukzK6RUKRbBYM44ApoL6kNUdbELvC2J6psqs1YxprwAw9D5C8N41tWFRwx7MIPx83TG8aGYDCU/q1E5Xd7fDpXlm4gZxPPXMHwIT4WJBvzDZoCCpxJSEYEzHzfF6HTTWcWo8BBbUeC8qssCHiyA==</code></pre></li></ul><h3 id="二、php-解密"><a href="#二、php-解密" class="headerlink" title="二、php 解密"></a>二、php 解密</h3><ul><li><p>解密用的私钥，与加密用的公钥为一对，公钥可以用私钥生成，后文中会介绍</p><pre><code>-----BEGIN PRIVATE KEY-----MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDg8eZ6Ph5UsYIKSB8d/JhUVUK4Xq7BSWJ1kVk8GaJbO2zaqpNG2D72lRk/omjj7SfJtX3Ptbb7hz1kb6OUcQXkrPB+32I9MhiB2JMODP05EZHy6zs+s98kCfJblrK9TF0ur0K0MFnS/duvW+Uef2bmm2F/4xnfwq0lZ6hB12XrDfW6tjEUbrb9VogChligrq8cvUcL9De8+mZBFZ6ML4V7DH2AYybG0wN96tHsRjZz4Mow1R6vf3Drev1Gp2X7X7TIl5Gkz0xAcuTSnV3t6Q113C2Waa64iBM/NJF5Jk7/LfC879oR/awytX914tIHKtwRfdrDvqj0MSUyKFlL8EGbAgMBAAECggEBAIWKtpRd6m3HT/dAp9CKk/iFAW4pL8AqC9zWJE7MvRlCZzZNy89kM8T58RpZFcIymctjBsTYEUC0IhtNN6S5kJEYplH71fuUkP4NEAhoZ7CIoMfBJNPtvwxLJ2l+RrCg9DTx8Ty986WR9ejeOmBnrDQ9jJ16unKfxWEOb9JeyO/IpcuNi1+FKjCJDExNrEbPsiVdHK3tWI7a3lKVA6pTVSypjp3gLlbxwHpgVaEm+dakRFiPoyCoxYigQhsmnKp0ou+2qrJIl7b6NM+mfWD/o21zhAD3q/2vDfc5M661UhljQ/CvinB6P39Zs4gIhZa17AeZOXEgekcx/I068vLRKLkCgYEA9xaztzsvJTOQOjYXZAaTssVO1VpDp9YbaXzLhrmc9HZVTgIiuDumKHrZ98r0yxQ21CszyJUEVbDSmVzehYnkMpC6lV03H8KuODNtjbeUkEw87g3+wiEuDAPUPHpVo/Afzxnd3kvH0dOKkMkYH09tuBbI7JXEbeJtxOuCxc7QCT0CgYEA6Q7AXNnerxcIcfBmFQR2HArmcIQcfmyx1D7USxwbub2kdSTd1Qr3pFbyPiqGmO2YjrvJCnXPH1ofq6gWWTH46Q0uxrNjp2XnZAPG03I+2gyGzs4ASSdFbDJwmQ6t0Pk253qArlzlcQgrGqtRS/4SzfivYiO6B27uaon8174Us7cCgYAYDsjOxV9wwtV/JXcfkRheZqGnWlOOCuW+Xp0+b+IdV0w0/TY+M+iYtmV0n/k3sK8p907ib8ftQ/stXYJ5BBUI61iPZHUSjZUC+dbn3oEDj7i7APfWFP7zwoeun8ao4J9oPb+BfmVlQ7CRKlND8Srgqq9Dgc2PWWWQr9GayuksjQKBgQCMVr2vK+LUPGJxefl+nnkg2c954ZPm7T0IOe1MbVikuHXXtKOALmKBK3ojxSfX3vsGuD2PdvGKR5LaoxUSEO16KN4J+OwBWXPE3iFUIm+GjhR/Y7z4UBWV2anEAPrZ47gUG8hxNq9TKUALhy4lPJHGRgIWbr0OzNX0gbMnluaQcQKBgDyQeTvFpPuziNltPVm0BEbD6mSgHTky1i5w/k2UiR72tUHb3ekx98fPc0YHqczYbc7l8vP7mDO0+ZmtdFmqJjcixY3ZlvWeVjZ/QlI7wpgCy5hsgSRnxdy94IrLhrA5zlL0dDC0mAVzTPzJltIXQrbpjdKjcOCrdDny0WUw+OX4-----END PRIVATE KEY-----</code></pre></li><li><p>php 代码部分</p><pre><code>$privateStr = &apos;上文中的私钥&apos;;$pKey = openssl_pkey_get_private($privateStr);//encoded 为 上文js加密后的密文$encoded = base64_decode($encoded);openssl_private_decrypt($encoded,$decrypted,$pKey,OPENSSL_PKCS1_PADDING);echo $decrypted;//如果一切正常的话，就能解密出结果 hello world</code></pre></li></ul><h3 id="三、一些说明"><a href="#三、一些说明" class="headerlink" title="三、一些说明"></a>三、一些说明</h3><ul><li><p>php 的openssl 扩展官网 <a href="http://php.net/manual/en/ref.openssl.php" target="_blank" rel="noopener">http://php.net/manual/en/ref.openssl.php</a></p></li><li><p>创建密钥对</p><pre><code>$ssl = openssl_pkey_new([]);   </code></pre></li><li><p>提取私钥</p><pre><code>openssl_pkey_export($res, $privKey);//privKey 就为私钥 格式为 -----BEGIN PRIVATE KEY-----......-----END PRIVATE KEY-----</code></pre></li><li><p>获取detail，包括公钥、模、指数等信息</p><ul><li><p>方式一，从密钥对里面提取</p><pre><code>$detail = openssl_pkey_get_details($ssl);//公钥$publicKey = $detail[&apos;key&apos;];//模，值为二进制乱码，转为16进制$module = $detail[&apos;rsa&apos;][&apos;n&apos;];$module = bin2hex($module);//指数，值为二进制乱码，转为16进制$exponent = $detail[&apos;rsa&apos;][&apos;e&apos;];$exponent = bin2hex($exponent); //一般结果为 010001 （65537）</code></pre></li><li><p>方式二，从私钥里提取</p><pre><code>$privateKeySource = openssl_get_privatekey($privKey);$detail = openssl_pkey_get_details($privateKeySource);//后面取模、指数等信息同方式一</code></pre></li><li><p>方式三，从公钥里提取</p><pre><code>//$publicKey 为方式一中提取的 publicKey $publicKeySource = openssl_get_publickey($publicKey);$publicKeyDetail = openssl_pkey_get_details($publicKeySource);//后面取模、指数等信息同方式一//从公钥里面提取的 detail 的内容较少</code></pre></li></ul></li><li><p>解密</p><pre><code>// $encoded 为已被加密的密文$encoded = base64_decode($encoded);//私钥 , $pKey = openssl_pkey_get_private($privKey);//私钥解密openssl_private_decrypt($encoded,$decoded,$pKey,OPENSSL_PKCS1_PADDING);echo $decoded;</code></pre></li></ul><h3 id="四、完整的实例"><a href="#四、完整的实例" class="headerlink" title="四、完整的实例"></a>四、完整的实例</h3><blockquote><p>以下内容基于 phalcon 的 controller ，如果你没有使用phalcon，可能会修改一部分代码</p><pre><code>里面有三个actionindex：html 页面，包括js加密部分decode：php 解密部分，接收post数据，与页面index 的ajax交互create：rsa 要用到的一些基本函数，没多大用，就一些注释</code></pre></blockquote><pre><code>&lt;?php/** * @brief * Created by PhpStorm. * User: zy&amp;cs * Date: 17-3-2 * Time: 上午11:47 */namespace App\Modules\Tester\Controllers;class RsaController extends ControllerBase{    /**     * 内置了几个私钥，用该方法获取一个，     *     * 可以自己用 createAction 自己往后面加，实际操作中用缓存或数据库就能解决了     *     *     * @param bool|int $key 默认取第一个，$key === false 时，取所有     * @return array     */    private function rsaPrivateKey($key=false)    {        $rsaKeys = [];        $rsaKeys[0] = &lt;&lt;&lt;rsakey-----BEGIN PRIVATE KEY-----MIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQDMYA9a+x7XxFh8Ihk9EK+6N0xZNq8qhBH5jypFO7zVvOHYPDjr1OAoKXYESDF5Yk+bbivXRY3PtjbbQF2f0kNTkGBO0bwUmmDJ8RWs14uA+OyPmByHpBxRDLvddNNe3sj0GWbOKMXhSNQDzdu+U7vCtpjrHfKcoa8X5VjVln/A/gmQ4sCl3eQgeWcBciMV1AMY3b5Ez3ZuVM2CHNQl4dyGzMtEmSxOTT9oFFlDI64q+6QjlDOeo0cOD3lZDuR7x1knXWtLJtQ4v2Al8Ovoci6b33DApSRJJCFMclIhakIRHfmQxSANxu7L25OslJ0UhbOZEVoWm5hkkjrCh3opznJjAgMBAAECggEBAIFHgm8ayrfSC+b56t0l4QL6V+FXJhbO1E/4r9R7pUfO403VSmxjjCfbkjvDLwiJl7HKTxEtfjcWHD00ygR/DPefLEyvfznJLdCQIBXlgulijMGIhwOGXCMo2u2LKOmqI5PFPbLLN+D6IKMHZSlP7kWNG84ec4mA/TEwcrEpMkbxSaK7J5psPJ14OwRyj3Ok/Q7cF6jfqWmBKDVErHlsQHrqVVuq3Ik67u9E4bQvdgRCA+1z61ruu9pmyNhGBj0KsQCBU/e+4X1TpKVPgnBS/q2qLGT5JwL556Fax5xiT4PjuFI607WXdjsl5Zi1pYbxTJBgJhfeUs64pRkwHzMp/4ECgYEA7b5PwkozKiYWFBzqJhutrykTTAZj+L4WomV3fwWNYJLboBX4fq7w4/rOP1xQtbtlSVeQxRV6+uka8QU5f+f+cH+/h2d/G0/ppwOPuavkW4pXhYNFlrJ6l9/KMG9Niw+R4Jrf09h47QgEXfjmuJfBlTnLb5FyvZ0miAcuabuhoh8CgYEA3BHHZPsDaJpSLaoN8RUYfbTyOU1kj4Pp4N7psZ5AKxZblBMPYubZMcR+accZ2TDlch4rZJBOyfay6Cw4ZzneKeUO5NI/hr2gQh6Zd2ZpxHEE8SxYRDOOf3l8gP83aspLzL8KT/XNySJraRacaknXETiP+pNcKqFozy0J3ujVDz0CgYBKnsM1/kgU4KNpaLHtiB55rfDKme7i8fb0vdhF3B5Fw5J/qqW2TX56cAwwQu9qOwlNfdiIo3dYLbYxFCy6Ar0P3mjlPQzeK7TwoOOJqXQhb0iNNWiwJhDofmtdzHGQRjDJSJMcUQOTkkKcpDT2l1tBVUSPHh3feeXQKEDfGu9ejQKBgQCRXYUSZORZgiZqV3wiFUc6Mf4Wb9LPIdmpWlWPp/LHA1u2sehl8grh3uOJx6SBXNUSzm7nXJNOwRBoYF1ZglYH4nA2IdMok7V6N3Az+IhA5E7ZZ+teEZg9B+h/5RWcCsiLFF4hd0JZa8z7e54Sb3gKvgwM/q3Q0xHCWAO/JJkoGQKBgQCXP+SGszS+YExHp+zOBv1KRtv98YO9hZq9c+eXbVVbqEOo2/QM3G6joSdla7fD4SuEHA0MoEalgPkZ2teV+Wsq/CbbrlZTTbdjMXuJu6VY7aKXG4nq3ZaU1cjxKSovP5S4NNueCNvUYWXp218ES19cTtlOxaiqzUFB6csgohAxwQ==-----END PRIVATE KEY-----rsakey;        $rsaKeys[1] = &lt;&lt;&lt;rsakey-----BEGIN PRIVATE KEY-----MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDETB/jy7cTG9SNEAgqh+wgIn7BCjBUGYP5po5oAYSsksQeMzBow2upsAw1JTizUwPyRhiuA7+WCUNgW65zh4Lj/gnjRa2SQWAx1PgUh5xhKJBKU84UPrPRt6CRL5HRdqL6vi0YU26lpewSHPC2TWVuXyQrKGPLCkcRG0gnWEyCN53Ua/zpYYas3gNr3Qs64ZT60VIGXdXktpbSozdofOmI8rXUzzVJbj5ahlnGzTtM+XBtlDvY2Sb2sB3FjH6jXLyTdr26AcpuSRJQZAJffHBm1bZwWJszpVKYNP7bYpt/Ey5uCuJUNq/XlNlmKKN5H9mzG2UITirduxRvvfV+QzVDAgMBAAECggEAdKO/Nz5vVF1vGTrzf0Iw3o9gvhfty6s1rnx3lfmA+oJjIobMNxQXv0aqmlG5tWSYrbdVJuF3UBHFBVa0/FUDQ7JJ8dAPaR6LqFCh8KD8HQdbZa8SfxkbBHyWXm7juJFEGrYyWYgJ8Uf8VG754Xlv0fuapEJludorjFCnuSlQnPagtw6t3tcj/BzbXTrrGi6V36vm9lkg4qrdozJcYl9cIXs/SAdWUX5jIkCAHVSrNoKALSwylPeNMSVzJu3o6ivj4OPfn6/HuNZZ3Z18O/veNB13B4xb4M9f7RduQQFNC9BqqH8nyfRiYtFFFj3SRfmF74GJCYe3xP4MDB3PV5DpUQKBgQDnpt1qqPiVbuaL4Kroa3b62u66RZnZxGCvvpaBeP7+cx69RGwcXxfYRNVSQ3VRbChuhsbw9UWrFY+akOT75QLCorxpyaSiYkv0aHpFqjWX9IaKY3PJN7hq7VICHTRehdpiNpp1Y092HWz6+qxn4h8D4+bTmyQmU7S5gvfc5H00xwKBgQDY7fcXAfbuxnKw8j8BZQAhkjF2RvN0DGD/Uocee06LKrXzGWwP0ydCismxL50DvsddmJ92CEHqBtf8zoq32MlMTlCyBvSmFx/ZPEKalHxNlHuDDjnMSI4yYhd9losFhagXI767Uhce28AiNoHKd8dXM+8NY77QxZJ9g/yzyatHpQKBgA1vbx4ViL1Z/kMUl7T9LpxkAD6LdN3dduIagq4lr1xgnuLJSh/nIAHqFBk+UlqTlFC8vmMRRqYijP6g8rbtVFiniZf1GvhUDSWyvYy2z37trrPuCrQb6DVDaGM5AGWPC9hwZEr0pJIsKLrxuPgZdEUMfcG+GL2kUzIDN473LY/XAoGANcjif5DcIZ2QaDDX0EezfZ9apiG3UOmUzxkuKS+XbMfdLvX5pf7LeCMjGMxeWMRfd+RUfRZVCWpC+QpYuHaGimXMeidhVyDao6jeNqdkHnQXH4pSaEUBBJrvihLeSzM1Vu9k5drXoq4HeDQdgA6snQFiXuaBNBAYXwhvikAROIUCgYEA3SkKhaZVXgsfIQpKwR1FWrTgh1976+40ZY8a1Ktg9W7HJm8FmyEcsgnZxVM0IMVZ4W6LS1HboNL3XR0C7UtCGa/EXZWqau7eMuob1lz9MyxQMYtiNKRBpGrJyo9HoFjS1M4xVGyVq0C6V3SplMB4vjjY7Snq6YKVk8Rw770Tnus=-----END PRIVATE KEY-----rsakey;        $rsaKeys[2] = &lt;&lt;&lt;rsakey-----BEGIN PRIVATE KEY-----MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDg8eZ6Ph5UsYIKSB8d/JhUVUK4Xq7BSWJ1kVk8GaJbO2zaqpNG2D72lRk/omjj7SfJtX3Ptbb7hz1kb6OUcQXkrPB+32I9MhiB2JMODP05EZHy6zs+s98kCfJblrK9TF0ur0K0MFnS/duvW+Uef2bmm2F/4xnfwq0lZ6hB12XrDfW6tjEUbrb9VogChligrq8cvUcL9De8+mZBFZ6ML4V7DH2AYybG0wN96tHsRjZz4Mow1R6vf3Drev1Gp2X7X7TIl5Gkz0xAcuTSnV3t6Q113C2Waa64iBM/NJF5Jk7/LfC879oR/awytX914tIHKtwRfdrDvqj0MSUyKFlL8EGbAgMBAAECggEBAIWKtpRd6m3HT/dAp9CKk/iFAW4pL8AqC9zWJE7MvRlCZzZNy89kM8T58RpZFcIymctjBsTYEUC0IhtNN6S5kJEYplH71fuUkP4NEAhoZ7CIoMfBJNPtvwxLJ2l+RrCg9DTx8Ty986WR9ejeOmBnrDQ9jJ16unKfxWEOb9JeyO/IpcuNi1+FKjCJDExNrEbPsiVdHK3tWI7a3lKVA6pTVSypjp3gLlbxwHpgVaEm+dakRFiPoyCoxYigQhsmnKp0ou+2qrJIl7b6NM+mfWD/o21zhAD3q/2vDfc5M661UhljQ/CvinB6P39Zs4gIhZa17AeZOXEgekcx/I068vLRKLkCgYEA9xaztzsvJTOQOjYXZAaTssVO1VpDp9YbaXzLhrmc9HZVTgIiuDumKHrZ98r0yxQ21CszyJUEVbDSmVzehYnkMpC6lV03H8KuODNtjbeUkEw87g3+wiEuDAPUPHpVo/Afzxnd3kvH0dOKkMkYH09tuBbI7JXEbeJtxOuCxc7QCT0CgYEA6Q7AXNnerxcIcfBmFQR2HArmcIQcfmyx1D7USxwbub2kdSTd1Qr3pFbyPiqGmO2YjrvJCnXPH1ofq6gWWTH46Q0uxrNjp2XnZAPG03I+2gyGzs4ASSdFbDJwmQ6t0Pk253qArlzlcQgrGqtRS/4SzfivYiO6B27uaon8174Us7cCgYAYDsjOxV9wwtV/JXcfkRheZqGnWlOOCuW+Xp0+b+IdV0w0/TY+M+iYtmV0n/k3sK8p907ib8ftQ/stXYJ5BBUI61iPZHUSjZUC+dbn3oEDj7i7APfWFP7zwoeun8ao4J9oPb+BfmVlQ7CRKlND8Srgqq9Dgc2PWWWQr9GayuksjQKBgQCMVr2vK+LUPGJxefl+nnkg2c954ZPm7T0IOe1MbVikuHXXtKOALmKBK3ojxSfX3vsGuD2PdvGKR5LaoxUSEO16KN4J+OwBWXPE3iFUIm+GjhR/Y7z4UBWV2anEAPrZ47gUG8hxNq9TKUALhy4lPJHGRgIWbr0OzNX0gbMnluaQcQKBgDyQeTvFpPuziNltPVm0BEbD6mSgHTky1i5w/k2UiR72tUHb3ekx98fPc0YHqczYbc7l8vP7mDO0+ZmtdFmqJjcixY3ZlvWeVjZ/QlI7wpgCy5hsgSRnxdy94IrLhrA5zlL0dDC0mAVzTPzJltIXQrbpjdKjcOCrdDny0WUw+OX4-----END PRIVATE KEY-----rsakey;        $rsaKeys[3] = &lt;&lt;&lt;rsakey-----BEGIN PRIVATE KEY-----MIIBUwIBADANBgkqhkiG9w0BAQEFAASCAT0wggE5AgEAAkEA0ZJCQOOdXAGtSN1WMBNQp27kzLC7qE275nNgJsxk7VN2okNDPoTyn2jKO66VSy6j2Jgnsa2Ivd8w0kZQs96viwIDAQABAkANFdDFNHES2Zf0QL2s6sfSbH4kubQ94fyleva59XEn0D1RtQouELkG8ziIYbqucTMJm5IkyR7wFYDCDuGgDU6BAiEA9hRhdeQfdwLzNUQfrReNEScLLhDMGbDqVsEvu8ik8zsCIQDaBRndLKubqbTtE/HP6tFG8bNHLpCfRbv+YTBgbyvP8QIgfdbKSClSVd/yU2j08eU7RGw88V+xn+myzI6aRGNExwUCIHBIIEHgN6E7jYprsyW5cX5wDDykpqbgaylfNGL13kKBAiAZwTtHJmMuApSOrdesqoeNMOqKhoDgyNZyGbnWQa+Dxg==-----END PRIVATE KEY-----rsakey;        $rsaKeys[4] = &lt;&lt;&lt;rsakey-----BEGIN PRIVATE KEY-----MIICdgIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGBAMpVIE75OR2lftwnU2WXszG5YPCxZno7Q2cdfpXQ2aW69hcdjiQDgBeVfSngRtrK2lXlkiBw5wIuK9MIe0jL1tatPRJ+/kHSnQadh01NpHsz/FiMQsJ8jOdfP2zhCO6F6p6cgTH7ccSp3AHqXvmGIPZByba5N3KVgqSayux4cDQhAgMBAAECgYArPA1vUqn1v8tf17dmWggcc/RW+lFfhRJeElteQAaB93VmcxZQc78HSxY3wIjjb70/5ZJYBEgYmy0aJxHQ+F2rmE7JviFtDUNp3wC64juvntuSoEOBjmjYVYhfNHOvoVrh/Lh8/8cj5bba2D2/G0h+DAhCNuHDA2yesAmUm3icEQJBAPROBPTAHSdAh46osdpnjFp1skrsK5ZAzvLzvNGA9WtO581u7cbKdmfKZOa/0G3grOtC9reRovNxHzyLqhcD9HMCQQDUBLuNsdZOfOe5fRnloH3Bs/U63VHpGuhD619kX3ZFC9J0yykSk37eWm6+lXJ9iEmMOpbIByzEzt5FvxCQteQbAkBk0gXNk7L0Tfcjco7jWTRc6JGJxek++sPtE5VqyFN/03JqH0tVbJxsvOPjLmmvzrbN6Da1Dw82dAq2C9VH5kPtAkAE18rU9L/5cP72DLZ/uUfGGe87Ff0d/wBZNNIr/8Y604dOJandg8L9H0GyVsWTun47lscE8K0EHdmT7EZbl9wLAkEA5vV71Jk8zxGDhpDdqmviFDTMGjl2zQwIh8AW+OL+R1GAlsJlcWy0E4C6lm3xohv5vO1V9PngnWMKYJf8FW2DvA==-----END PRIVATE KEY-----rsakey;        $rsaKeys[5] = &lt;&lt;&lt;rsakey-----BEGIN PRIVATE KEY-----MIIBFAIBADANBgkqhkiG9w0BAQEFAASB/zCB/AIBAAIzAVKoys24WgfliPeAh2LHvhFEQ1KmxEETTrOwjSLtYFgA6opEvcND4Hie61syD3i/g7sBAgMBAAECMwDfbilPDH+pkhCJaizoSOvnLGhWUVxNqtVSKTXJX/Nri/a5Ye3sr+ZZIaCcxZCeBOejIQIaAbPKiMN2IzV+WpDMr9zspM1Khz2Hy3y0hKUCGgDG8O8syaInZ7/qdrn2/1TIuZkOCkE4+KItAhlgyLtlBai+Kai9fegU3a2gNkwg2zbTJFhNAhkyNURnrUu7XjfVWLl+WNpw/kZegMANPNLRAhoBgZPB6KHFUtqcodgnJvRkyt8wVlUk0Lx6Qg==-----END PRIVATE KEY-----rsakey;        if($key === false){            return $rsaKeys;        }        if (!isset($rsaKeys[$key])) {            $key=0;        }        return $rsaKeys[$key];    }    /**     * @param $id     * @return array     */    private function getDetailFromPKId($id)    {        $key = $this-&gt;rsaPrivateKey($id);        $resource = openssl_get_privatekey($key);        return  openssl_pkey_get_details($resource);;    }    private function getHtml($keyId,$rsaModule,$rsaExponent)    {        //rsa 的那几个js        $rsaAssets = [            &apos;jsbn.js&apos;,            &apos;prng4.js&apos;,            &apos;rng.js&apos;,            &apos;rsa.js&apos;,            &apos;base64.js&apos;,        ];        $rsaJsPre = &apos;http://blog.lopy.win/assets/rsa/&apos;;        $rsaJs = &apos;&apos;;        foreach($rsaAssets as $val){            $rsaJs .= &apos;&lt;script src=&quot;&apos; . $rsaJsPre . $val . &apos;&quot;&gt;&lt;/script&gt;&apos;;        }        //切换 privateKey        $switchStr = &apos;&apos;;        foreach($this-&gt;rsaPrivateKey() as $key=&gt;$val)        {            $switchStr .= &apos;&lt;li&gt;&lt;a href=&quot;index?key_id=&apos; . $key . &apos;&quot;&gt;密钥 - &apos; . $key . &apos; &lt;/a&gt;&lt;/li&gt;&apos;;        }        //密钥长度        $moduleLength = strlen($rsaModule) * 8 / 2; //为毛要除以2 ，因为 bin2hex 后，长度为两倍        //html 代码        $html = &lt;&lt;&lt;html&lt;html&gt;&lt;head&gt;&lt;script src=&quot;//cdn.bootcss.com/jquery/2.1.3/jquery.min.js&quot;&gt;&lt;/script&gt;$rsaJs&lt;/head&gt;&lt;body&gt;&lt;script&gt;    //class rsa    var MyRsa = function(key,eVal){        key = key || &apos;&apos;;        eVal = eVal || &apos;010001&apos;;        var rsaObj = new RSAKey();        var init = function(key,eVal){            if(key){                rsaObj.setPublic(key,eVal);            }        };        this.encrypt = function(str){            var strEncoded = rsaObj.encrypt(str);            if(!strEncoded){                alert(&apos;hello what\&apos;s your name&apos;);                return false;            }            return hex2b64(strEncoded);        }        init(key,eVal);    }    function submitCheck(){        var rsaModule = &quot;$rsaModule&quot;;        var rsaExponent = &quot;$rsaExponent&quot;;        var myRsa = new MyRsa(rsaModule,rsaExponent);        $(&quot;[name=input]&quot;).val(myRsa.encrypt($(&quot;#input&quot;).val()));        var url = &quot;decode&quot;;        var data ={            key_id:$(&quot;[name=key_id]&quot;).val(),            input:$(&quot;[name=input]&quot;).val(),        };        $.post(url,data,function(json){            if(json.flag ===0){                $(&apos;#decoded&apos;).val(json.decoded);            }else{                alert(json.msg);            }        });        return false;    }&lt;/script&gt;&lt;style&gt;    input.full{        width: 100%;    }&lt;/style&gt;&lt;ul&gt;$switchStr&lt;/ul&gt;&lt;form action=&quot;#&quot; method=&quot;post&quot;&gt;    &lt;ul&gt;        &lt;input type=&quot;hidden&quot; name=&quot;key_id&quot; value=&quot;$keyId&quot;&gt;        &lt;li&gt;&lt;/li&gt;        &lt;li&gt;密钥长度&lt;/li&gt;        &lt;li&gt;            &lt;input type=&quot;text&quot; readonly value=&quot;$moduleLength&quot; class=&quot;full&quot;&gt;        &lt;/li&gt;        &lt;li&gt;&lt;/li&gt;        &lt;li&gt;模（n）&lt;/li&gt;        &lt;li&gt;            &lt;input type=&quot;text&quot; readonly value=&quot;$rsaModule&quot; class=&quot;full&quot;&gt;        &lt;/li&gt;        &lt;li&gt;&lt;/li&gt;        &lt;li&gt;指数（e）&lt;/li&gt;        &lt;li&gt;            &lt;input type=&quot;text&quot; readonly value=&quot;$rsaExponent&quot; class=&quot;full&quot;&gt;        &lt;/li&gt;        &lt;li&gt;&lt;/li&gt;        &lt;li&gt;输入要加密的字符串：&lt;/li&gt;        &lt;li&gt;            &lt;input type=&quot;text&quot; id=&quot;input&quot; class=&quot;full&quot;&gt;        &lt;/li&gt;        &lt;li&gt;&lt;/li&gt;        &lt;li&gt;js加密后&lt;/li&gt;        &lt;li&gt;            &lt;input type=&quot;text&quot; name=&quot;input&quot; readonly class=&quot;full&quot;&gt;        &lt;/li&gt;        &lt;li&gt;&lt;/li&gt;        &lt;li&gt;php解密后&lt;/li&gt;        &lt;li&gt;&lt;input type=&quot;text&quot; id=&quot;decoded&quot; readonly class=&quot;full&quot;&gt;&lt;/li&gt;        &lt;li&gt;&lt;/li&gt;        &lt;li&gt;            &lt;button type=&quot;submit&quot; onclick=&quot;return submitCheck();&quot;&gt;encode &amp;&amp; decode&lt;/button&gt;        &lt;/li&gt;    &lt;/ul&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;html;        return $html;    }    /**     *     * @return bool     */    public function indexAction()    {        $keyId = $this-&gt;request-&gt;get(&apos;key_id&apos;,&apos;int&apos;,0);        $keyId = $keyId &lt; 0 ? 0 : $keyId;        //取一个私钥 private key        $detail = $this-&gt;getDetailFromPKId($keyId);        //取得该密钥对的 模 和指数，也是 n 和 e        $rsaModule = strtoupper(bin2hex($detail[&apos;rsa&apos;][&apos;n&apos;]));        $rsaExponent = bin2hex($detail[&apos;rsa&apos;][&apos;e&apos;]);        //输出html        echo $this-&gt;getHtml($keyId, $rsaModule, $rsaExponent);        return false;    }    /**     * @return bool     */    public function decodeAction()    {        //post 参数        $keyId = $this-&gt;request-&gt;getPost(&apos;key_id&apos;, &apos;int&apos;, 0);        $input = $this-&gt;request-&gt;getPost(&apos;input&apos;, [&apos;string&apos;, &apos;trim&apos;], &apos;&apos;);        $json = [            &apos;flag&apos; =&gt; 1,            &apos;msg&apos;  =&gt; &apos;&apos;        ];        if($keyId &lt; 0){            $json[&apos;msg&apos;] = &apos;what\&apos;s your name?&apos;;        }else if(!$input){            $json[&apos;msg&apos;] = &apos;how old are you&apos;;        }else{            $str = base64_decode($input);            //私钥            $pKey = openssl_pkey_get_private($this-&gt;rsaPrivateKey($keyId));            //私钥解密            openssl_private_decrypt($str,$decrypted,$pKey,OPENSSL_PKCS1_PADDING);            //结果            $json[&apos;flag&apos;] = 0;            $json[&apos;decoded&apos;] = $decrypted;        }        $this-&gt;response-&gt;setJsonContent($json);        return false;    }    //test    public function createAction()    {        echo &apos;&lt;pre&gt;&apos;;        //创建密钥对        //$rsaPair = openssl_pkey_new([]);        $rsaPair = openssl_pkey_new([            &apos;private_key_bits&apos;=&gt;401        ]);        //get 私钥        openssl_pkey_export($rsaPair, $privateKey);        var_dump($privateKey);        // get detail of private key        //array(        //  bits    位数        //  key 公钥        //  rsa =&gt; array(        //      n 模        // 。。。。。。        //  )        //  type        //)        $privateKeyDetail = openssl_pkey_get_details($rsaPair);        /*        //这样也行，两种方法        $privateKeySource = openssl_get_privatekey($privateKey);        $privateKeyDetail = openssl_pkey_get_details($privateKeySource);        */        //ob_clean();var_dump($privateKeyDetail);return false;        //get 公钥 public key        var_dump($privateKeyDetail[&apos;key&apos;]);        var_dump(&apos;------------------------------------------ private key start ------------------------------------------&apos;);        //模 n ，一般用hex 显示        var_dump(strtoupper(bin2hex($privateKeyDetail[&apos;rsa&apos;][&apos;n&apos;])));        //指数 e        var_dump(bin2hex($privateKeyDetail[&apos;rsa&apos;][&apos;e&apos;]));        var_dump(strtoupper(bin2hex($privateKeyDetail[&apos;rsa&apos;][&apos;d&apos;])));        var_dump(&apos;------ p and q ------&apos;);        var_dump((bin2hex($privateKeyDetail[&apos;rsa&apos;][&apos;p&apos;])));        var_dump((bin2hex($privateKeyDetail[&apos;rsa&apos;][&apos;q&apos;])));        var_dump(&apos;------------------------------------------ private key end ------------------------------------------&apos;);        var_dump(&apos;&apos;);        var_dump(&apos;------------------------------------------ public key start ------------------------------------------&apos;);        //也可以用public key 获取 detail        //public 的 detail 里面的 rsa 的东西要少些        $publicKeySource = openssl_get_publickey($privateKeyDetail[&apos;key&apos;]);        $publicKeyDetail = openssl_pkey_get_details($publicKeySource);        var_dump(strtoupper(bin2hex($publicKeyDetail[&apos;rsa&apos;][&apos;n&apos;])));        var_dump(bin2hex($privateKeyDetail[&apos;rsa&apos;][&apos;e&apos;]));        var_dump(&apos;------------------------------------------ public key end ------------------------------------------&apos;);        var_dump($publicKeyDetail);        echo &apos;&lt;/pre&gt;&apos;;        return false;    }}</code></pre><p>rsa<br><a href="http://www-cs-students.stanford.edu/~tjw/jsbn/" target="_blank" rel="noopener">http://www-cs-students.stanford.edu/~tjw/jsbn/</a></p><p>demo<br><a href="http://www-cs-students.stanford.edu/~tjw/jsbn/rsa.html" target="_blank" rel="noopener">http://www-cs-students.stanford.edu/~tjw/jsbn/rsa.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;hr&gt;
&lt;p&gt;从前blog移植过来，暂无摘要，后期再补&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;零、-后面一个实例，点击跳过前面的废话&quot;&gt;&lt;a href=&quot;#零、-后面一个实例，点击跳
      
    
    </summary>
    
      <category term="web" scheme="https://blog.lopy.win/categories/web/"/>
    
    
      <category term="php" scheme="https://blog.lopy.win/tags/php/"/>
    
      <category term="js" scheme="https://blog.lopy.win/tags/js/"/>
    
      <category term="rsa" scheme="https://blog.lopy.win/tags/rsa/"/>
    
  </entry>
  
  <entry>
    <title>debian realtek 无线网卡安装</title>
    <link href="https://blog.lopy.win/2017/02/20/2017-2017-02-20-debian-realtek-driver/"/>
    <id>https://blog.lopy.win/2017/02/20/2017-2017-02-20-debian-realtek-driver/</id>
    <published>2017-02-19T16:00:01.000Z</published>
    <updated>2018-10-30T09:38:05.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr><p>从前blog移植过来，暂无摘要，后期再补</p><hr><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><pre><code>sudo apt-get install firmware-realtek </code></pre><h4 id="命令行设置"><a href="#命令行设置" class="headerlink" title="命令行设置"></a>命令行设置</h4><h4 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h4><pre><code>sudo reboot</code></pre><hr><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><blockquote><p><a href="https://packages.debian.org/jessie/firmware-realtek" target="_blank" rel="noopener">https://packages.debian.org/jessie/firmware-realtek</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;hr&gt;
&lt;p&gt;从前blog移植过来，暂无摘要，后期再补&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;
      
    
    </summary>
    
      <category term="linux" scheme="https://blog.lopy.win/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>PHP自动捕捉页面500错误示例</title>
    <link href="https://blog.lopy.win/2016/08/19/2016-2016-08-19-php-error-http500/"/>
    <id>https://blog.lopy.win/2016/08/19/2016-2016-08-19-php-error-http500/</id>
    <published>2016-08-18T16:00:01.000Z</published>
    <updated>2018-10-30T09:38:05.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr><p>从前blog移植过来，暂无摘要，后期再补</p><hr><h3 id="一、解决方法"><a href="#一、解决方法" class="headerlink" title="一、解决方法"></a>一、解决方法</h3><p>　　通常程序发生致命错误的时候页面空白，想获取错误信息也不难!主要是利用两个函数：</p><p>1、error_get_last() 获取最后一次发生错误信息，结构如下：</p><pre><code>Array(    [type] =&gt; 8    [message] =&gt; Undefined variable: http://www.111cn.net    [file] =&gt; C:WWWindex.php    [line] =&gt; 2)</code></pre><p>2、register_shutdown_function() 在脚本停止执行时注册一个回调函数</p><p>有了这两个函数就可以监控致命错误了：</p><pre><code>error_reporting(E_ALL); //E_ALLfunction cache_shutdown_error() {    $_error = error_get_last();    if ($_error &amp;&amp; in_array($_error[&apos;type&apos;], array(1, 4, 16, 64, 256, 4096, E_ALL))) {        echo &apos;&lt;font color=red&gt;你的代码出错了：&lt;/font&gt;&lt;/br&gt;&apos;;        echo &apos;致命错误:&apos; . $_error[&apos;message&apos;] . &apos;&lt;/br&gt;&apos;;        echo &apos;文件:&apos; . $_error[&apos;file&apos;] . &apos;&lt;/br&gt;&apos;;        echo &apos;在第&apos; . $_error[&apos;line&apos;] . &apos;行&lt;/br&gt;&apos;;    }}register_shutdown_function(&quot;cache_shutdown_error&quot;);</code></pre><h3 id="二、附上本地服务器测试方法"><a href="#二、附上本地服务器测试方法" class="headerlink" title="二、附上本地服务器测试方法"></a>二、附上本地服务器测试方法</h3><p>　　下面来说说显示PHP错误提示消息的三个方法。</p><p>1、php.ini配置</p><p>php.ini 配置中与此相关的有两个配置变量。下面是这两个变量及其默认值</p><pre><code>display_errors = Offerror_reporting = E_ALL &amp; ~E_NOTICE</code></pre><p>display_errors 变量的目的很明显 —— 它告诉PHP是否显示错误。默认值是 Off。现在我们的目的是显示错误提示，那么：</p><pre><code>display_errors = On</code></pre><p>　　E_ALL，这个设置会显示从不良编码实践到无害提示到出错的所有信息。E_ALL 对于开发过程来说有点太细，因为它连变量未初始化也显示提示，而这一点正是PHP“高级”的一个特征。幸好，error_reporting的默认值是“E_ALL &amp; ~E_NOTICE”，这样就只看到错误和不良编码了，对程序无不利的提示则不会显示。　　</p><p>　　修改php.ini后需要重新启动Apache，这样才可以在apache中生效，当然你如果只在命令行下测试程序，是不需要这一步的。</p><p>　　配置php程序中</p><pre><code>&lt;?php    //禁用错误报告    error_reporting(0);    //报告运行时错误    error_reporting(E_ERROR | E_WARNING | E_PARSE);    //报告所有错误    error_reporting(E_ALL);?&gt;</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;hr&gt;
&lt;p&gt;从前blog移植过来，暂无摘要，后期再补&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;一、解决方法&quot;&gt;&lt;a href=&quot;#一、解决方法&quot; class=&quot;headerlink&quot;
      
    
    </summary>
    
      <category term="web" scheme="https://blog.lopy.win/categories/web/"/>
    
    
      <category term="php" scheme="https://blog.lopy.win/tags/php/"/>
    
      <category term="error" scheme="https://blog.lopy.win/tags/error/"/>
    
  </entry>
  
  <entry>
    <title>debian 7 64位编译php5 的注意点</title>
    <link href="https://blog.lopy.win/2016/08/17/2016-2016-08-17-debian-7-php-64-error/"/>
    <id>https://blog.lopy.win/2016/08/17/2016-2016-08-17-debian-7-php-64-error/</id>
    <published>2016-08-16T16:00:01.000Z</published>
    <updated>2018-10-30T09:38:05.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr><p>从前blog移植过来，暂无摘要，后期再补</p><hr><p>debian 7 64位服务器由于lib路径的特殊性，编译php的时候，会一直抱某些lib文件找不到</p><p>比如libjpeg，libpng，libmysql等</p><p>其实我们只要用php的一个编译参数就可以解决这个问题，这个参数就是 –with-libdir=</p><pre><code>./configure --prefix=/usr/local/php5 --with-iconv --with-zlib --enable-xml --with-gettext --with-curl --enable-force-cgi-redirect --enable-mbstring --with-mcrypt --with-gd --enable-gd-native-ttf --with-mhash --enable-sockets --with-xmlrpc --enable-zip --with-mysql --with-mysqli --with-pdo-mysql --enable-ftp --with-jpeg-dir --with-freetype-dir --with-png-dir --enable-bcmath --enable-calendar --enable-exif -with-openssl --with-bz2 --with-apxs2=/usr/local/apache2/bin/apxs --with-libdir=lib/x86_64-linux-gnu</code></pre><p>注意 –with-libdir=lib/x86_64-linux-gnu</p><p>代表实际路径是 /usr/lib/x86_64-linux-gnu</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;hr&gt;
&lt;p&gt;从前blog移植过来，暂无摘要，后期再补&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;debian 7 64位服务器由于lib路径的特殊性，编译php的时候，会一直抱某些lib文件找不
      
    
    </summary>
    
      <category term="web" scheme="https://blog.lopy.win/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>phalcon 的跳转问题</title>
    <link href="https://blog.lopy.win/2016/08/01/2016-2016-08-01-phalcon-redirect-send/"/>
    <id>https://blog.lopy.win/2016/08/01/2016-2016-08-01-phalcon-redirect-send/</id>
    <published>2016-07-31T16:00:01.000Z</published>
    <updated>2018-10-30T09:38:05.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr><p>从前blog移植过来，暂无摘要，后期再补</p><hr><p>今天又遇到那个那老问题了，phalcon 跳转（response-&gt;redirect(…)） 时，仍然会执行后续代码的问题</p><h2 id="例1"><a href="#例1" class="headerlink" title="例1"></a>例1</h2><pre><code>public function indexAction()    {        //判断条件        if(true){            $this-&gt;response-&gt;redirect(&apos;http://www.qq.com&apos;);        }        //new 一个 Phalcon\Logger\Adapter\File() ,        $logger = new File($this-&gt;config-&gt;application-&gt;logsDir.&apos;debug.log&apos;);        // log        $logger-&gt;log(&apos;hello world &apos;);    }</code></pre><p>执行该脚本，结果就是跳转到 www.qq.com ，但是 $logger 也仍然会运行，记录下 hello world。<br>这种在action  的 redirect 还比较好解决，直接在 redirect 那里 return 就可以了</p><p>比如</p><pre><code>public function indexAction(){    //判断条件    if(true){        return $this-&gt;response-&gt;redirect(&apos;http://www.qq.com&apos;);        //或者这样        $this-&gt;response-&gt;redirect(&apos;http://www.qq.com&apos;);        return;    }    //new 一个 Phalcon\Logger\Adapter\File() ,    $logger = new File($this-&gt;config-&gt;application-&gt;logsDir.&apos;debug.log&apos;);    // log    $logger-&gt;log(&apos;hello world &apos;);}</code></pre><p>但还有一种情况，就是比如判断用户权限时，就可会把 redirect 写在 initialize 或者 beforeExecuteRoute 等地方</p><pre><code>public function initialize(){    $this-&gt;response-&gt;redirect(&apos;http://www.baidu.com&apos;);    return;}public function indexAction(){    $this-&gt;response-&gt;redirect(&apos;http://www.qq.com&apos;);    //new 一个 Phalcon\Logger\Adapter\File() ,    $logger = new File($this-&gt;config-&gt;application-&gt;logsDir.&apos;debug.log&apos;);    // log    $logger-&gt;log(&apos;hello world &apos;);}</code></pre><p>执行后，就跳转到了 qq 而不是 baidu ， logger 也正常 log 。而且 initialize 里面的加了 return 也没有效果。</p><p>但是，如果把 return 改成exit 的话，就直接是空页面。</p><p>查了一下 Response 的接口，发现里面的两个方法</p><pre><code>/** * Prints out HTTP response to the client * * @return ResponseInterface */public function send();/** * Sends headers to the client * * @return ResponseInterface */public function sendHeaders();</code></pre><p>觉得可能 Response 只是设置了跳转url ，而实际并没有发送header。<br>于是尝试了一下,在 redirect 方法后面加了 send() 或者 sendHeaders() 执行了一下。<br>结果还是不成功，仍然会执行后续代码。<br>再然后，加了一个exit ，就成功了。记录一下代码！！！</p><pre><code>public function initialize(){    //$this-&gt;response-&gt;redirect(&apos;http://www.baidu.com&apos;)-&gt;sendHeaders();    $this-&gt;response-&gt;redirect(&apos;http://www.baidu.com&apos;)-&gt;send();    exit();}public function indexAction(){    $this-&gt;response-&gt;redirect(&apos;http://www.qq.com&apos;);    //new 一个 Phalcon\Logger\Adapter\File() ,    $logger = new File($this-&gt;config-&gt;application-&gt;logsDir.&apos;debug.log&apos;);    // log    $logger-&gt;log(&apos;hello world &apos;);}</code></pre><p>上面的 send() 和 sendHeaders() 都可以用，关于这两个的区别，暂时没有时间研究。先记在这里吧，有时间再看！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;hr&gt;
&lt;p&gt;从前blog移植过来，暂无摘要，后期再补&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;今天又遇到那个那老问题了，phalcon 跳转（response-&amp;gt;redirect(…)）
      
    
    </summary>
    
      <category term="web" scheme="https://blog.lopy.win/categories/web/"/>
    
    
      <category term="phalcon" scheme="https://blog.lopy.win/tags/phalcon/"/>
    
  </entry>
  
  <entry>
    <title>linux 新用户不能tab自动补全、退格变^H 等问题</title>
    <link href="https://blog.lopy.win/2016/07/29/2016-2016-07-29-linux-new-user/"/>
    <id>https://blog.lopy.win/2016/07/29/2016-2016-07-29-linux-new-user/</id>
    <published>2016-07-28T16:00:01.000Z</published>
    <updated>2018-10-30T09:38:05.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr><p>从前blog移植过来，暂无摘要，后期再补</p><hr><p>去年搞了台国外的便宜的服务器，主要用于浏览长城以外的风光。服务器也一直很稳定。</p><p>由于硬盘空间较小，也没有准备搞其它用。最近决定在服务器上搞一些不占空间的服务，我草，每个访问一个页面，后面都带一段js代码。</p><p>然后试了一下，就连这最简单的 “echo ‘hello world’;” 都会带。google 了一下，没找到原因，然后就一言不合的重装了系统。。。</p><p>然后新建用户，切换过后发现新用户有问题。比如退格键是 ^H ，tab键不自动补全。。。</p><p>用命令看了一下</p><pre><code>cat /ect/passwd</code></pre><p>发现root用户的shell是/bin/bash</p><p>普通用户的shell是/bin/sh</p><p>然后把该用户的 /bin/sh 改成 /bin/bash 就行了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;hr&gt;
&lt;p&gt;从前blog移植过来，暂无摘要，后期再补&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;去年搞了台国外的便宜的服务器，主要用于浏览长城以外的风光。服务器也一直很稳定。&lt;/p&gt;
&lt;p&gt;由于
      
    
    </summary>
    
      <category term="linux" scheme="https://blog.lopy.win/categories/linux/"/>
    
    
      <category term="linux" scheme="https://blog.lopy.win/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>linux (debian) 启动报错 contains a file system with errors.check forced</title>
    <link href="https://blog.lopy.win/2016/06/28/2016-2016-06-28-linux-contains-a-file/"/>
    <id>https://blog.lopy.win/2016/06/28/2016-2016-06-28-linux-contains-a-file/</id>
    <published>2016-06-27T16:00:01.000Z</published>
    <updated>2018-10-30T09:38:05.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr><p>从前blog移植过来，暂无摘要，后期再补</p><hr><h3 id="今天开机，debian起动不了了。搜索了一下，应该硬盘的逻辑卷无法加载。"><a href="#今天开机，debian起动不了了。搜索了一下，应该硬盘的逻辑卷无法加载。" class="headerlink" title="今天开机，debian起动不了了。搜索了一下，应该硬盘的逻辑卷无法加载。"></a>今天开机，debian起动不了了。搜索了一下，应该硬盘的逻辑卷无法加载。</h3><h3 id="用-fsck-命令解决，特此记录"><a href="#用-fsck-命令解决，特此记录" class="headerlink" title="用 fsck 命令解决，特此记录"></a>用 fsck 命令解决，特此记录</h3><pre><code>fsck -C fd -N /dev/sda[n]     #命令中 [n] 为出错的分区，一般为 /boot 分区</code></pre><p>结果为 [/sbinfsck.ext4 (1) – /dev/sda[n] ] ……</p><p>然后执行命令</p><pre><code>fsck.ext4 -C0 /dev/sda[n]</code></pre><p>期间会多次地提示输入 yes/y 直接输入y 就行了。</p><p>完成后，会提示FILE SYSTEM WAS MODIFIED</p><p>不出意外，重启系统后就能成功登录了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;hr&gt;
&lt;p&gt;从前blog移植过来，暂无摘要，后期再补&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;今天开机，debian起动不了了。搜索了一下，应该硬盘的逻辑卷无法加载。&quot;&gt;&lt;a hre
      
    
    </summary>
    
      <category term="linux" scheme="https://blog.lopy.win/categories/linux/"/>
    
    
      <category term="linux" scheme="https://blog.lopy.win/tags/linux/"/>
    
      <category term="error" scheme="https://blog.lopy.win/tags/error/"/>
    
  </entry>
  
  <entry>
    <title>MarkDown初步尝试</title>
    <link href="https://blog.lopy.win/2016/06/18/2016-2016-06-18-mark-down-learn/"/>
    <id>https://blog.lopy.win/2016/06/18/2016-2016-06-18-mark-down-learn/</id>
    <published>2016-06-17T16:00:01.000Z</published>
    <updated>2018-10-30T09:38:05.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr><p>从前blog移植过来，暂无摘要，后期再补</p><hr><h2 id="1-一、-Title"><a href="#1-一、-Title" class="headerlink" title="1. 一、 Title"></a>1. 一、 Title</h2><ul><li>Title1<br>=</li></ul><p>通过在文字下方添加“=”表示一级标题。</p><pre><code>Title1=</code></pre><ul><li>Title2<br>-</li></ul><p>通过在文字下方添加“-”表示二级标题。</p><pre><code>Title2-</code></pre><ul><li><h3 id="Title3"><a href="#Title3" class="headerlink" title="Title3"></a>Title3</h3></li></ul><p>在文字开头加上 “#”，通过“#”数量表示几级标题。（一共只有1~6级标题，1级标题字体最大）</p><pre><code>### Title3</code></pre><h2 id="二、-有序列表"><a href="#二、-有序列表" class="headerlink" title="二、 有序列表"></a>二、 有序列表</h2><p>使用数字后面跟上句号。（还要有空格）<br>如：以下列表</p><ol><li>小红</li><li>小明</li><li>小白</li><li>小逼</li></ol><p>.</p><pre><code>1. 小红2. 小明3. 小白4. 小逼</code></pre><h2 id="三、无序列表"><a href="#三、无序列表" class="headerlink" title="三、无序列表"></a>三、无序列表</h2><p>在文字开头添加(*, +, -)和空格实现无序列表。</p><ul><li>小红</li><li>小黄</li></ul><ul><li>小马</li><li>小羊</li></ul><ul><li>小高</li><li>小美</li></ul><p>.</p><pre><code>- 小红- 小黄* 小马* 小羊+ 小高+ 小美</code></pre><h2 id="四、加粗，斜体"><a href="#四、加粗，斜体" class="headerlink" title="四、加粗，斜体"></a>四、加粗，斜体</h2><p>在文字开头和结尾加上 ** </p><p><strong>这是加粗的文字1</strong><br><strong>这是加粗的文字2</strong></p><p><em>这是斜体文字1</em><br><em>这是斜体文字2</em></p><p>.</p><pre><code>**这是加粗的文字1**__这是加粗的文字2__*这是斜体文字1*_这是斜体文字2_</code></pre><h2 id="五、图片"><a href="#五、图片" class="headerlink" title="五、图片"></a>五、图片</h2><p><img src="http://www.iconpng.com/png/phuzion/windows.png" alt="这是一张图片"></p><p>.</p><pre><code>![这是一张图片](http://www.iconpng.com/png/phuzion/windows.png)</code></pre><h2 id="六、文字链接"><a href="#六、文字链接" class="headerlink" title="六、文字链接"></a>六、文字链接</h2><ul><li>普通跳转 <a href="https://github.com/" target="_blank" rel="noopener">Github</a></li></ul><p>.</p><pre><code>[Github](https://github.com/)</code></pre><ul><li>target=’_blank’跳转 <a href="https://github.com/" target="_blank" rel="noopener">Github target _blank</a>{:target=”_blank”}</li></ul><p>.</p><pre><code>[Github](https://github.com/){:target=&quot;_blank&quot;}</code></pre><ul><li>邮箱链接 <a href="&#x6d;&#x61;&#x69;&#108;&#116;&#111;&#58;&#50;&#x38;&#x34;&#x31;&#x34;&#49;&#x30;&#53;&#48;&#64;&#113;&#113;&#46;&#99;&#111;&#x6d;">&#50;&#x38;&#x34;&#x31;&#x34;&#49;&#x30;&#53;&#48;&#64;&#113;&#113;&#46;&#99;&#111;&#x6d;</a></li></ul><p>.</p><pre><code>&lt;284141050@qq.com&gt;</code></pre><h2 id="七、引用"><a href="#七、引用" class="headerlink" title="七、引用"></a>七、引用</h2><blockquote><p>这是一个引用<br>这是一个引用<br>这是一个引用</p><pre><code>这是另一个引用，&gt;后面有5个空格这是另一个引用，&gt;后面有5个空格这是另一个引用，&gt;后面有5个空格</code></pre></blockquote><p>.</p><pre><code>&gt; 这是一个引用&gt; 这是一个引用&gt; 这是一个引用&gt;     这是另一个引用，&gt;后面有5个空格&gt;     这是另一个引用，&gt;后面有5个空格&gt;     这是另一个引用，&gt;后面有5个空格</code></pre><h2 id="八、删除线"><a href="#八、删除线" class="headerlink" title="八、删除线"></a>八、删除线</h2><p><del>是不是有删除线</del></p><pre><code>~~是不是有删除线~~</code></pre><h2 id="九、分割线"><a href="#九、分割线" class="headerlink" title="九、分割线"></a>九、分割线</h2><h2 id=""><a href="#" class="headerlink" title="*"></a><em>*</em></h2><pre><code>***---</code></pre><h2 id="十、表格"><a href="#十、表格" class="headerlink" title="十、表格"></a>十、表格</h2><p>表1</p><p>姓名|性别|年龄|爱好<br>小红|女|28|没有<br>小明|男|21|考试<br>Jim Green|男|25|打飞机</p><p>表2</p><p>姓名|性别|年龄|爱好<br>|—|:—:|:—|—:|<br>小红|女|28|没有<br>小明|男|21|考试<br>Jim Green|男|25|打飞机</p><p>表3</p><p>姓名|性别|年龄|爱好<br>|—    |—    |—    |—    |<br>小红|女|28|没有<br>小明|男|21|考试<br>Jim Green|男|25|打飞机</p><pre><code>表1姓名|性别|年龄|爱好小红|女|28|没有小明|男|21|考试Jim Green|男|25|打飞机表2姓名|性别|年龄|爱好|---|:---:|:---|---:|小红|女|28|没有小明|男|21|考试Jim Green|男|25|打飞机表3姓名|性别|年龄|爱好|---    |---    |---    |---    |小红|女|28|没有小明|男|21|考试Jim Green|男|25|打飞机</code></pre><h2 id="sddff"><a href="#sddff" class="headerlink" title="sddff"></a>sddff</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;hr&gt;
&lt;p&gt;从前blog移植过来，暂无摘要，后期再补&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;1-一、-Title&quot;&gt;&lt;a href=&quot;#1-一、-Title&quot; class=&quot;hea
      
    
    </summary>
    
      <category term="lessons" scheme="https://blog.lopy.win/categories/lessons/"/>
    
    
      <category term="md" scheme="https://blog.lopy.win/tags/md/"/>
    
  </entry>
  
</feed>
